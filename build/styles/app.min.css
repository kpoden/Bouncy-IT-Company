@font-face{font-family:'BigJohn';src:url(../fonts/BIGJOHN.otf)}@font-face{font-family:'OpenSans';src:url(../fonts/OpenSans-Regular.ttf)}@font-face{font-family:'SourceSansPro';src:url(../fonts/SourceSansPro-Regular.ttf)}@font-face{font-family:'SourceSansPro';src:url(../fonts/SourceSansPro-Light.ttf);font-weight:100;font-style:normal}@font-face{font-family:'Roboto';src:url(../fonts/Roboto-Regular.ttf)}*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}:active,:focus{outline:0}.container{width:100%;height:100%;margin:0 auto;overflow:hidden;min-width:250px;position:relative}ul{list-style:none}a{text-decoration:none;color:inherit;-webkit-transition:.2s;transition:.2s}h1,h2,h3,h4,ul{margin:0;padding:0}.wrapper{max-width:1150px;margin:0 auto;padding:0 15px}.burger-menu{display:none;position:relative;width:40px;height:30px;-webkit-transition:.3s;transition:.3s;top:0;right:0;z-index:1000;cursor:pointer}@media (max-width:820px){.burger-menu{display:block}}.burger-menu span,.burger-menu:after,.burger-menu:before{width:100%;height:2px;position:absolute;background-color:#fff;break-radius:2px}.burger-menu span{top:13px;opacity:1}.burger-menu:after,.burger-menu:before{content:"";-webkit-transition:.3s;transition:.3s}.burger-menu:before{top:0}.burger-menu:after{bottom:0}.close span{opacity:0}.close:before{top:9px;-webkit-transform:rotate(225deg);transform:rotate(225deg)}.close:after{bottom:19px;-webkit-transform:rotate(-225deg);transform:rotate(-225deg)}.bg-mobile{top:0;left:0;position:fixed;width:100%;height:100%;background-color:rgba(0,0,0,.9);z-index:-1;visibility:hidden;opacity:0;-webkit-transition:.5s;transition:.5s;overflow:a}@media (max-width:820px){.bgactive{display:block;opacity:1;z-index:999;visibility:visible}}.down-button{width:36px;height:36px;border-radius:50%;background-color:#19bd9a;position:absolute;bottom:6vh;left:50%;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);margin:0 auto;cursor:pointer;-webkit-transition:.3s;transition:.3s;-webkit-box-shadow:8px 8px 8px -11px rgba(0,0,0,.75);box-shadow:8px 8px 8px -11px rgba(0,0,0,.75);border:1px solid transparent}.down-button:hover{bottom:6.6vh;border:1px solid rgba(255,255,255,.5)}.down-button__arrow{content:'';display:block;height:7px;width:7px;background-color:transparent;border:1px solid #fff;position:absolute;left:50%;top:46%;-webkit-transform:translate(-50%,-50%) rotate(45deg);transform:translate(-50%,-50%) rotate(45deg);border-top:transparent;border-left:transparent}.block-title{font-family:SourceSansPro;text-transform:uppercase;line-height:2;font-weight:100;letter-spacing:4px;color:#333b46;font-size:calc(16px + 4*((100vw - 320px)/1040));padding-bottom:25px}.block-text,.btn{font-family:"OpenSans";color:#81868e;line-height:1.786;font-size:calc(11px + 3*((100vw - 320px)/1040))}.btn{font-size:calc(10px + 6*((100vw - 320px)/1040));color:#333b46;line-height:40px;text-align:center;border:1px solid #000;width:140px;height:40px;border-radius:20px;cursor:pointer;-webkit-transition:.1s;transition:.1s;display:block}.bold,.turq-b{font-weight:700}.turq,.turq-b{color:#19bd9a}header{position:relative;height:100vh;width:100vw;overflow:hidden}.header__bg{height:100%;width:100%;position:absolute;top:0;left:0;z-index:-2;-o-object-fit:cover;object-fit:cover}.header__top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding-top:38px}.header__header-title{text-align:center;position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);max-width:600px}.header__header-title .block-title{color:#fff;letter-spacing:7px;padding-bottom:15px;font-size:calc(26px + 9*((100vw - 320px)/1040))}.header__header-title .header-subtitle{font-family:OpenSans;font-size:calc(12px + 4*((100vw - 320px)/1040));line-height:1.75;font-weight:100}.bg-fon{background-color:rgba(0,0,0,.3);height:100%;position:absolute;width:100%;top:0;left:0;z-index:-1}.top-menu__logo{font-family:BigJohn;font-size:25px;line-height:.48;z-index:1000}@media (max-width:820px){.top-menu__nav{opacity:0;visibility:hidden;-webkit-transform:translateY(30px);transform:translateY(30px);position:fixed;top:0;left:0;width:100%;height:100vh;z-index:1000;overflow:scroll}}.top-menu .mobile-active{visibility:visible;opacity:1;-webkit-transform:translateY(0);transform:translateY(0);-webkit-transition:.3s;transition:.3s}.top-menu__list{display:-webkit-box;display:-ms-flexbox;display:flex;width:auto}@media (max-width:820px){.top-menu__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:10vh 0 5vh}}.top-menu__item{margin:0 0 0 2px}@media (max-width:820px){.top-menu__item{margin-bottom:7vh}}.top-menu__item a{padding:7px 18px;text-align:center;border:transparent 1px solid;border-radius:20px;font-size:16px;font-family:OpenSans}@media (max-width:820px){.top-menu__item a{font-size:24px;border-radius:25px;padding:8px 27px}}.top-menu__item a:hover{border:1px #fff solid}.bouncy{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:170px}@media (max-width:1360px){.bouncy{padding:calc(30px + 140*((100vw - 320px)/1040))}}.bouncy__left{width:57%;padding-right:15px}@media (max-width:460px){.bouncy__left{width:100%}}.bouncy__title{color:#333b46}.bouncy__text{padding-bottom:60px}.bouncy__button:hover{-webkit-box-shadow:0 0 5px 0 rgba(0,0,0,.5);box-shadow:0 0 5px 0 rgba(0,0,0,.5)}.bouncy__right{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.bouncy__right img{width:100%}@media (max-width:1360px){.bouncy__right img{width:calc(120px + 95*((100vw - 320px)/1040))}}@media (max-width:460px){.bouncy__right img{display:none}}.details{text-align:center;background-color:#f3f3f3;padding-top:60px}.details__subtitle{padding-bottom:60px;max-width:460px;margin:0 auto}.details__icons{margin:0 auto;width:210px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding-bottom:60px}.details__icon{display:block;position:relative;border-radius:50%;background-color:#81868e;width:53px;height:53px;cursor:pointer;-webkit-transition:.2s;transition:.2s}.details__icon:hover{background-color:#19bd9a}.details__icon span{position:absolute;top:53%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);color:#fff;font-size:28px}.creative-text{text-align:left}@media (max-width:600px){.creative-text{padding:0 10%}}.creative-text__title{font-family:"OpenSans";font-size:20px;color:#333;font-weight:100;padding-bottom:30px}.creative-text__wrap{display:-webkit-box;display:-ms-flexbox;display:flex;padding-bottom:80px}@media (max-width:600px){.creative-text__wrap{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.creative-text__left{padding-right:100px}@media (max-width:600px){.creative-text__left{padding-right:0}}.featured{text-align:center;padding:75px 0 0}.featured__subtitle{margin:0 auto;width:45%;min-width:300px;padding-bottom:50px}.featured__images{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;overflow:hidden;cursor:pointer;position:relative}.featured__image{width:33.5%;overflow:hidden;position:relative;height:315px;-webkit-transition:.4s;transition:.4s}@media (max-width:1653px){.featured__image{height:280px}}@media (max-width:1460px){.featured__image{height:240px}}@media (max-width:1055px){.featured__image{height:180px}}@media (max-width:790px){.featured__image{height:130px}}.featured__image img{width:120%;overflow:hidden;-webkit-box-flex:1;-ms-flex:1;flex:1}@media (max-width:567px){.featured__image img{height:150%;width:auto}}.featured__image:after{content:"";display:block;position:absolute;top:0;left:0;width:105%;height:100%;background-color:rgba(0,0,0,.7);-webkit-transition:.3s;transition:.3s}.featured__image:hover::after{-webkit-transform:translateY(-100%);transform:translateY(-100%)}.featured__image:hover .featured__imagetext{top:10%;font-weight:700}.featured__imagetext{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);color:#fff;font-family:'SourceSansPro';text-transform:uppercase;font-size:calc(15px + 5*((100vw - 320px)/1040));z-index:1010;font-weight:100;-webkit-transition:.4s;transition:.4s}.featured__footer{background:url(../img/featured/footer.png);background-size:cover}.featured__footer .wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:calc(10px + 20*((100vw - 320px)/1040));height:calc(90px + 28*((100vw - 320px)/1040))}.featured__footer .wrapper h4,header{color:#fff}.featured__footer .wrapper a{border-color:#fff;color:#fff}.featured__button:hover{background-color:rgba(255,255,255,.3);color:transparent;-webkit-transition:.2s;transition:.2s}.services{text-align:center;padding:80px 0 0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhc3MvX2ZvbnRzLnNjc3MiLCJhcHAuY3NzIiwic2Fzcy9fbWl4aW5zLnNjc3MiLCJzYXNzL19nbG9iYWwuc2FzcyIsInNhc3MvX2VsZW1lbnRzLnNhc3MiLCJzYXNzL3BhcnRpYWxzL19oZWFkZXIuc2FzcyIsInNhc3MvcGFydGlhbHMvX2JvdW5jeS5zYXNzIiwic2Fzcy9wYXJ0aWFscy9fZGV0YWlscy5zYXNzIiwic2Fzcy9wYXJ0aWFscy9fZmVhdHVyZWQuc2FzcyIsInNhc3MvcGFydGlhbHMvX3NlcnZpY2VzLnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkEsQUFBQSxXQUNJLHFCLENBQ0EsOEIsQUNHSixXRENJLHNCLENDQ0YsdUMsQUFHRixXQUNJLDJCLENERUosNEMsQUNFQSxXREVJLDJCLENDQUYseUMsQ0RHRixlLENBQ0ksa0IsQUVwQkosV0FPQSxvQixDQU9BLHFDQW9CQSxDLENBT0EsUyxDQU9BLFEsQ0FPQSxRLENBckJBLEMsQ0NsQ2MsTSxDQUFWLE8sQ0FDQSw2QixDQUNBLHFCLENBR0EsTyxDRmdDSixNLENBQ0ksUyxDQUdKLFUsQ0FDSSxVLENFL0JKLFcsQ0FDSSxhLENBQ0EsZSxDQUNBLGUsQ0FDQSxpQixDRm1DSixFLENFaENBLGUsQ0FLQSxDLENBQ0ksb0IsQ0FDQSxhLENBQ0Esc0IsQ0FBQSxjLENGcUNKLEUsQ0VsQ0ksRSxDQUFBLEUsQ0FBUyxFLENGcUJiLEUsQ0VwQkksUSxDRm1DQSxTLENBR0osUSxDRWpDSSxnQixDRm1DQSxhLENHdEVBLGMsQ0gwRUosWSxDR3RFSSxZLENBQ0EsaUIsQ0FDQSxVLENBQUEsVyxDQUNBLHNCLENBQ0EsYyxDQUNBLEssQ0FDQSxPLENGd0NBLFksQ0VqREosYyxDSHNGQSx5Qkd0RVEsWSxDQUNBLGVIMkVSLGlCLENBVUEsa0IsQ0d0R0EsbUIsQ0FBQSxVLENBaUNRLFUsQ0h5RUosaUIsQ0d4RUoscUIsQ0FBQSxnQixDSDBEQSxpQixDR2xFUSxRLENBQ0EsUyxDSDJFUixrQixDR3RHQSxtQixDQStCUSxVLENBS0Esc0IsQ0h5RUosYyxDQUlKLG1CLENBQ0ksSyxDQUdKLGtCLENBQ0ksUSxDQUdKLFcsQ0d6RUksUyxDSDZFSixhLENHekVJLE8sQ0FDQSxnQyxDQUNBLHdCLENINkVKLFksQ0cxRUksVyxDSDRFQSxpQyxDQ3BGQSx5QixDRHdGSixVLENHekVRLEssQ0FDQSxNLENIMkVKLGMsQ0d6RUosVSxDQUVBLFcsQ0FFQSwrQixDQUNJLFUsQ0FDQSxpQixDQUNBLFMsQ0FDQSxzQixDQUNBLGMsQ0FDQSxVLENIMkVKLHlCR3hFSSxTLENBQ0EsYSxDQUNBLFMsQ0FBQSxXLENBQ0Esb0JIOEVKLFksQ0cxRVEsVSxDQUVKLFcsQ0FDSSxpQixDQUNBLHdCLENBQ0EsaUIsQ0FDQSxVLENBQ0EsUSxDQUNBLG1DLENBQ0EsMkIsQ0FDQSxhLENBQ0EsYyxDQUNBLHNCLENIMkVKLGMsQ0cxRUksb0QsQ0FDQSw0QyxDSDRFSiw0QixDR3JFSixrQixDQUNJLFksQ0FDQSxxQyxDSDJFSixtQixDR3ZFSSxVLENGN0NBLGEsQ0UrQ0EsVSxDSHlFQSxTLENHdkVKLDRCLENBQ0kscUIsQ0FDQSxpQixDQUNBLFEsQ0ZwREEsTyxDRDhIQSxvRCxDR3ZFSiw0QyxDQUdBLHNCLENBRUEsdUIsQ0h3RUEsWSxDR3BFSSx5QixDQUNBLHdCLENBQ0EsYSxDQUNBLGUsQ0FDQSxrQixDQUNBLGEsQ0FDQSwrQyxDQUNBLG1CLENId0VKLFcsQ0FPQSxJLENHNUVBLHNCLENBRUEsYSxDQUVBLGlCLENBQ0ksK0MsQ0h1RUosSSxDQUNJLCtDLENHakVBLGEsQ0hvRUEsZ0IsQ0lqT0osaUIsQ0FDSSxxQixDQUNBLFcsQ0FDQSxXLENBQ0Esa0IsQ0FDQSxjLENKbU9BLHNCLENJak9BLGMsQ0FDSSxhLENKcU9SLEssQ0lsT1EsTyxDQUNBLGUsQ0pxT1IsSyxDQUlBLE8sQ0FISSxhLENBT0osTSxDSXJPUSxpQixDQUdKLFksQ0FDSSxXLENBQ0EsZSxDSndPUixXLENBQ0ksVyxDSXJPSSxVLENBTkgsaUIsQ0FTTyxLLENBQ0EsTSxDQUNBLFUsQ0hxQ1IsbUIsQ0doREMsZ0IsQ0pxUEwsWSxDSW5PWSxtQixDSnFPUixtQixDSW5PSixZLENBQ0ksd0IsQ0FDQSxxQixDQUNBLDZCLENBQ0EsZ0IsQ0p1T0oscUIsQ0FDSSxpQixDSTdOQSxpQixDQUNJLFEsQ0FDQSxPLENBQ0Esc0MsQ0FDQSw4QixDSitOSixlLENBR0osa0MsQ0kzTlksVSxDQUNBLGtCLENKNk5SLG1CLENJNU5RLCtDLENKZ09aLHNDLENJNU5ZLG9CLENBQ0EsK0MsQ0FDQSxnQixDSjhOUixlLENBR0osTyxDSTNOUSwrQixDSjZOSixXLENJNU5JLGlCLENBQUEsVSxDSitOSixLLENJM05BLE0sQ0FDSSxVLENKK05SLGUsQ0NyUUksbUIsQ0dxQ0EsYyxDSm1PQSxlLENBQ0EsWSxDQUdKLHlCQUNJLGMsQ0FDSSxTLENJbk9JLGlCLENKcU9KLGtDLENBQ0EsMEIsQ0lyT0ksYyxDSnVPSixLLENJbE9KLE0sQ0FDSSxVLENIbERKLFksQ0dpREEsWSxDQUdRLGlCSndPWix3QixDSW5PWSxrQixDQUNBLFMsQ0FDQSwrQixDSDNEUix1QixDRGlTQSxzQixDQUNBLGMsQ0FHSixlLENBQ0ksbUIsQ0FDQSxtQixDSzFWSixZLENBQ0ksVSxDTDhWSix5QkFDSSxlLENBQ0ksMkIsQ0s5VkosNEIsQ0pnREEseUIsQ0luREoscUIsQ0o2RUksd0IsQ0lyRUEscUIsQ0FDSSxrQixDQUNBLHVCLENKeUNKLG9CLENJM0NBLHNCLENBSVEsb0JMbVdaLGUsQ0szVkssZ0IsQ0wrVkwseUJLMVZRLGUsQ0FBQSxtQkxnV1IsaUIsQ0tqV0ssZ0IsQ0xtV0QsaUIsQ0FDQSw0QixDQUNBLGtCLENBQ0EsYyxDQUNBLG9CLENBR0oseUJNbFlBLGlCLENBQ0ksYyxDQUNBLGtCLENBQ0Esa0JOdVlKLHVCLENNN1hJLHFCLENOaVlKLE8sQ005WFEsbUIsQ0FBQSxtQixDQUNBLFksQ05pWUosd0IsQ0FDQSxxQixDTWpZSSw2QixDQUVKLGEsQ05vWUosMEJNaFlRLE8sQ0FDQSxpRE5xWVIsYSxDTTFZSyxTLENONFlELGtCLENBR0oseUJBQ0ksYSxDTS9YUSxZTm9ZWixjLENNaFlBLGEsQ05vWUEsYSxDQUNJLG1CLENBR0oscUIsQ00vWFEsMkMsQ0FDQSxtQyxDTm1ZUixjLENNL1hRLG1CLENBQUEsbUIsQ0FDQSxZLENMMUJKLHdCLENENlpBLHFCLENBQ0Esa0IsQ0FHSixrQixDTW5ZSSxVLENOdVlKLDBCQUNJLGtCLENBQ0ksK0MsQUFJUix5Qk9qY1Esa0IsQ0FDQSxjUHNjUixRLENPamNRLGlCLENBQUEsd0IsQ0FDQSxnQixDUHNjUixrQixDQUNJLG1CLENBQ0EsZSxDT3RjSSxhLENQMGNSLGUsQ09yY1EsYSxDQUNBLFcsQ0FDQSxtQixDQUNBLG1CLENBQ0EsWSxDQUFBLHdCLENOeUJKLHFCLENEZ2JBLDZCLENBQ0EsbUIsQ0FHSixjLENDcGJJLGEsQ0RzYkEsaUIsQ0FDQSxpQixDQ3ZiQSx3QixDRHliQSxVLENBQ0EsVyxDT3hkQyxjLENQMGRELHNCLENBQ0EsYyxDQUdKLG9CLENBQ0ksd0IsQ0FHSixtQixDT2xlSyxpQixDUG9lRCxPLENBQ0EsUSxDQUNBLHNDLENBQ0EsOEIsQ0FDQSxVLENBQ0EsYyxDQUdKLGMsQ0FDSSxlLENBR0oseUJPaGZLLGMsQ0FxQ08sZVBpZFoscUIsQ08xY1Esc0IsQ0FDQSxjLENQNGNKLFUsQ08zY0ksZSxDQUNBLG1CLENQK2NSLG9CLENPM2NRLG1CLENBQ0EsbUIsQ0FBQSxZLENBRUosbUIsQ1ArY0oseUJBQ0ksb0IsQ08zY1EsMkIsQ0FBQSw0QixDQUNBLHlCLENQOGNKLHVCQUlSLG9CLENBQ0ksbUIsQ0FHSix5QkFDSSxvQixDT2hkWSxpQlBxZGhCLFMsQ09oZFEsaUIsQ0FBQSxnQixDUHFkUixtQixDUWhqQkksYSxDUmtqQkEsUyxDQUNBLGUsQ0FDQSxtQixDQUdKLGlCLENBQ0ksbUIsQ0FDQSxtQixDQUNBLFksQ0FDQSx3QixDQUNBLHFCLENBQ0Esa0IsQ0FDQSx3QixDQUNBLHFCLENBQ0EsNkIsQ0FDQSxlLENBQ0EsYyxDQUNBLGlCLENBR0osZ0IsQ0FDSSxXLENBQ0EsZSxDQUNBLGlCLENBQ0EsWSxDQUNBLHNCLENBQ0EsYyxDQUdKLDBCQUNJLGdCLENBQ0ksYyxBQUlSLDBCQUNJLGdCLENBQ0ksYyxBQUlSLDBCQUNJLGdCLENBQ0ksYyxBQUlSLHlCQUNJLGdCLENBQ0ksY0FJUixvQixDQUNJLFUsQ0FDQSxlLENBQ0Esa0IsQ0FDQSxVLENBQ0EsTSxDQUdKLHlCQUNJLG9CLENBQ0ksVyxDQUNBLFlBSVIsc0IsQ0FDSSxVLENBQ0EsYSxDQUNBLGlCLENBQ0EsSyxDQUNBLE0sQ0FDQSxVLENBQ0EsVyxDQUNBLCtCLENBQ0Esc0IsQ0FDQSxjLENBR0osNkIsQ0FDSSxtQyxDQUNBLDJCLENBR0osMkMsQ0FDSSxPLENBQ0EsZSxDQUdKLG9CLENBQ0ksaUIsQ0FDQSxPLENBQ0EsUSxDQUNBLHNDLENBQ0EsOEIsQ0FDQSxVLENBQ0EsMkIsQ0FDQSx3QixDQUNBLCtDLENBQ0EsWSxDQUNBLGUsQ0FDQSxzQixDQUNBLGMsQ0FHSixpQixDQUNJLDBDLENBQ0EscUIsQ0FHSiwwQixDQUNJLG1CLENBQ0EsbUIsQ0FDQSxZLENBQ0Esd0IsQ0FDQSxxQixDQUNBLDZCLENBQ0Esd0IsQ0FDQSxxQixDQUNBLGtCLENBQ0EsOEMsQ0FDQSw2QyxDQUdKLDZCLENBemJBLE0sQ0EwYkksVSxDQUdKLDRCLENBQ0ksaUIsQ0FDQSxVLENBR0osdUIsQ0FDSSxxQyxDQUNBLGlCLENBQ0Esc0IsQ0FDQSxjLENBR0osUyxDQUNJLGlCLENBQ0EsZ0IiLCJmaWxlIjoiYXBwLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnQmlnSm9obic7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvQklHSk9ITi5vdGYnKVxyXG59XHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdPcGVuU2Fucyc7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvT3BlblNhbnMtUmVndWxhci50dGYnKVxyXG59XHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdTb3VyY2VTYW5zUHJvJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9Tb3VyY2VTYW5zUHJvLVJlZ3VsYXIudHRmJylcclxufVxyXG4gICAgXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdTb3VyY2VTYW5zUHJvJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9Tb3VyY2VTYW5zUHJvLUxpZ2h0LnR0ZicpIDtcclxuICAgIGZvbnQtd2VpZ2h0OiAxMDA7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL1JvYm90by1SZWd1bGFyLnR0ZicpXHJcbn1cclxuXHJcblxyXG4iLCJAZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0JpZ0pvaG4nO1xuICAgIHNyYzogdXJsKFwiLi4vZm9udHMvQklHSk9ITi5vdGZcIik7XG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnT3BlblNhbnMnO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL09wZW5TYW5zLVJlZ3VsYXIudHRmXCIpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ1NvdXJjZVNhbnNQcm8nO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL1NvdXJjZVNhbnNQcm8tUmVndWxhci50dGZcIik7XG59XG5cbkBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnU291cmNlU2Fuc1Bybyc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvU291cmNlU2Fuc1Byby1MaWdodC50dGZcIik7XG4gIGZvbnQtd2VpZ2h0OiAxMDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL1JvYm90by1SZWd1bGFyLnR0ZlwiKTtcbn1cblxuKiB7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgYm9yZGVyOiAwO1xufVxuXG4qLCAqOmJlZm9yZSwgKjphZnRlciB7XG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbio6Zm9jdXMsICo6YWN0aXZlIHtcbiAgICBvdXRsaW5lOiBub25lO1xufVxuXG4uY29udGFpbmVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBtaW4td2lkdGg6IDI1MHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxudWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG59XG5cbmEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC4ycztcbiAgICB0cmFuc2l0aW9uOiAuMnM7XG59XG5cbmgxLCBoMiwgaDMsIGg0IHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbn1cblxuLndyYXBwZXIge1xuICAgIG1heC13aWR0aDogMTE1MHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmc6IDAgMTVweCAwO1xufVxuXG4uYnVyZ2VyLW1lbnUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiA0MHB4O1xuICAgIGhlaWdodDogMzBweDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC4zcztcbiAgICB0cmFuc2l0aW9uOiAuM3M7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAwcHg7XG4gICAgei1pbmRleDogMTAwMDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MjBweCkge1xuICAgIC5idXJnZXItbWVudSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbn1cblxuLmJ1cmdlci1tZW51IHNwYW4ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMnB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIHRvcDogMTNweDtcbiAgICBvcGFjaXR5OiAxO1xuICAgIGJyZWFrLXJhZGl1czogMnB4O1xufVxuXG4uYnVyZ2VyLW1lbnU6YWZ0ZXIsIC5idXJnZXItbWVudTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAuM3M7XG4gICAgdHJhbnNpdGlvbjogLjNzO1xuICAgIGJyZWFrLXJhZGl1czogMnB4O1xufVxuXG4uYnVyZ2VyLW1lbnU6YmVmb3JlIHtcbiAgICB0b3A6IDBweDtcbn1cblxuLmJ1cmdlci1tZW51OmFmdGVyIHtcbiAgICBib3R0b206IDBweDtcbn1cblxuLmNsb3NlIHNwYW4ge1xuICAgIG9wYWNpdHk6IDA7XG59XG5cbi5jbG9zZTpiZWZvcmUge1xuICAgIHRvcDogOXB4O1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMjI1ZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgyMjVkZWcpO1xufVxuXG4uY2xvc2U6YWZ0ZXIge1xuICAgIGJvdHRvbTogMTlweDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC0yMjVkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKC0yMjVkZWcpO1xufVxuXG4uYmctbW9iaWxlIHtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC45KTtcbiAgICB6LWluZGV4OiAtMTtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC41cztcbiAgICB0cmFuc2l0aW9uOiAuNXM7XG4gICAgb3ZlcmZsb3c6IGE7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MjBweCkge1xuICAgIC5iZ2FjdGl2ZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICB6LWluZGV4OiA5OTk7XG4gICAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgfVxufVxuXG4uZG93bi1idXR0b24ge1xuICAgIHdpZHRoOiAzNnB4O1xuICAgIGhlaWdodDogMzZweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE5YmQ5YTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiA2dmg7XG4gICAgbGVmdDogNTAlO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCk7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogLjNzO1xuICAgIHRyYW5zaXRpb246IC4zcztcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDhweCA4cHggOHB4IC0xMXB4IHJnYmEoMCwgMCwgMCwgMC43NSk7XG4gICAgYm94LXNoYWRvdzogOHB4IDhweCA4cHggLTExcHggcmdiYSgwLCAwLCAwLCAwLjc1KTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbn1cblxuLmRvd24tYnV0dG9uOmhvdmVyIHtcbiAgICBib3R0b206IDYuNnZoO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbn1cblxuLmRvd24tYnV0dG9uX19hcnJvdyB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiA3cHg7XG4gICAgd2lkdGg6IDdweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdG9wOiA0NiU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoNDVkZWcpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSg0NWRlZyk7XG4gICAgYm9yZGVyLXRvcDogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLWxlZnQ6IHRyYW5zcGFyZW50O1xufVxuXG4uYmxvY2stdGl0bGUge1xuICAgIGZvbnQtZmFtaWx5OiBTb3VyY2VTYW5zUHJvO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgbGluZS1oZWlnaHQ6IDI7XG4gICAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgICBsZXR0ZXItc3BhY2luZzogNHB4O1xuICAgIGNvbG9yOiAjMzMzYjQ2O1xuICAgIGZvbnQtc2l6ZTogY2FsYygxNnB4ICsgNCAqICgoMTAwdncgLSAzMjBweCkgLyAxMDQwKSk7XG4gICAgcGFkZGluZy1ib3R0b206IDI1cHg7XG59XG5cbi5ibG9jay10ZXh0IHtcbiAgICBmb250LWZhbWlseTogXCJPcGVuU2Fuc1wiO1xuICAgIGNvbG9yOiAjODE4NjhlO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjc4NjtcbiAgICBmb250LXNpemU6IGNhbGMoMTFweCArIDMgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gMTA0MCkpO1xufVxuXG4uYnRuIHtcbiAgICBmb250LXNpemU6IGNhbGMoMTBweCArIDYgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gMTA0MCkpO1xuICAgIGZvbnQtZmFtaWx5OiBcIk9wZW5TYW5zXCI7XG4gICAgY29sb3I6ICMzMzNiNDY7XG4gICAgbGluZS1oZWlnaHQ6IDQwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDA7XG4gICAgd2lkdGg6IDE0MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC4xcztcbiAgICB0cmFuc2l0aW9uOiAuMXM7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5ib2xkLCAudHVycS1iIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLnR1cnEge1xuICAgIGNvbG9yOiAjMTliZDlhO1xufVxuXG4udHVycS1iIHtcbiAgICBjb2xvcjogIzE5YmQ5YTtcbn1cblxuaGVhZGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICB3aWR0aDogMTAwdnc7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmhlYWRlcl9fYmcge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogLTI7XG4gICAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5oZWFkZXJfX3RvcCB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHBhZGRpbmctdG9wOiAzOHB4O1xufVxuXG4uaGVhZGVyX19oZWFkZXItdGl0bGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRvcDogNTAlO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgbWF4LXdpZHRoOiA2MDBweDtcbn1cblxuLmhlYWRlcl9faGVhZGVyLXRpdGxlIC5ibG9jay10aXRsZSB7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDdweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTVweDtcbiAgICBmb250LXNpemU6IGNhbGMoMjZweCArIDkgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gMTA0MCkpO1xufVxuXG4uaGVhZGVyX19oZWFkZXItdGl0bGUgLmhlYWRlci1zdWJ0aXRsZSB7XG4gICAgZm9udC1mYW1pbHk6IE9wZW5TYW5zO1xuICAgIGZvbnQtc2l6ZTogY2FsYygxMnB4ICsgNCAqICgoMTAwdncgLSAzMjBweCkgLyAxMDQwKSk7XG4gICAgbGluZS1oZWlnaHQ6IDEuNzU7XG4gICAgZm9udC13ZWlnaHQ6IDEwMDtcbn1cblxuLmJnLWZvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjMpO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogLTE7XG59XG5cbi50b3AtbWVudV9fbG9nbyB7XG4gICAgZm9udC1mYW1pbHk6IEJpZ0pvaG47XG4gICAgZm9udC1zaXplOiAyNXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAwLjQ4O1xuICAgIHotaW5kZXg6IDEwMDA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MjBweCkge1xuICAgIC50b3AtbWVudV9fbmF2IHtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgzMHB4KTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDMwcHgpO1xuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwdmg7XG4gICAgICAgIHotaW5kZXg6IDEwMDA7XG4gICAgICAgIG92ZXJmbG93OiBzY3JvbGw7XG4gICAgfVxufVxuXG4udG9wLW1lbnUgLm1vYmlsZS1hY3RpdmUge1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAuM3M7XG4gICAgdHJhbnNpdGlvbjogLjNzO1xufVxuXG4udG9wLW1lbnVfX2xpc3Qge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IGF1dG87XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA4MjBweCkge1xuICAgIC50b3AtbWVudV9fbGlzdCB7XG4gICAgICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBwYWRkaW5nOiAxMHZoIDAgNXZoIDA7XG4gICAgfVxufVxuXG4udG9wLW1lbnVfX2l0ZW0ge1xuICAgIG1hcmdpbjogMCAwIDAgMnB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogODIwcHgpIHtcbiAgICAudG9wLW1lbnVfX2l0ZW0ge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA3dmg7XG4gICAgfVxufVxuXG4udG9wLW1lbnVfX2l0ZW0gYSB7XG4gICAgcGFkZGluZzogN3B4IDE4cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlcjogdHJhbnNwYXJlbnQgMXB4IHNvbGlkO1xuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGZvbnQtZmFtaWx5OiBPcGVuU2Fucztcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDgyMHB4KSB7XG4gICAgLnRvcC1tZW51X19pdGVtIGEge1xuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDI1cHg7XG4gICAgICAgIHBhZGRpbmc6IDhweCAyN3B4O1xuICAgIH1cbn1cblxuLnRvcC1tZW51X19pdGVtIGE6aG92ZXIge1xuICAgIGJvcmRlcjogMXB4ICNmZmYgc29saWQ7XG59XG5cbi5ib3VuY3kge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBwYWRkaW5nOiAxNzBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEzNjBweCkge1xuICAgIC5ib3VuY3kge1xuICAgICAgICBwYWRkaW5nOiBjYWxjKDMwcHggKyAxNDAgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gMTA0MCkpO1xuICAgIH1cbn1cblxuLmJvdW5jeV9fbGVmdCB7XG4gICAgd2lkdGg6IDU3JTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDYwcHgpIHtcbiAgICAuYm91bmN5X19sZWZ0IHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxufVxuXG4uYm91bmN5X190aXRsZSB7XG4gICAgY29sb3I6ICMzMzNiNDY7XG59XG5cbi5ib3VuY3lfX3RleHQge1xuICAgIHBhZGRpbmctYm90dG9tOiA2MHB4O1xufVxuXG4uYm91bmN5X19idXR0b246aG92ZXIge1xuICAgIC13ZWJraXQtYm94LXNoYWRvdzogMHB4IDBweCA1cHggMHB4IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDVweCAwcHggcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuXG4uYm91bmN5X19yaWdodCB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmJvdW5jeV9fcmlnaHQgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEzNjBweCkge1xuICAgIC5ib3VuY3lfX3JpZ2h0IGltZyB7XG4gICAgICAgIHdpZHRoOiBjYWxjKDEyMHB4ICsgOTUgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gMTA0MCkpO1xuICAgIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ2MHB4KSB7XG4gICAgLmJvdW5jeV9fcmlnaHQgaW1nIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG59XG5cbi5kZXRhaWxzIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YzZjNmMztcbiAgICBwYWRkaW5nLXRvcDogNjBweDtcbn1cblxuLmRldGFpbHNfX3N1YnRpdGxlIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogNjBweDtcbiAgICBtYXgtd2lkdGg6IDQ2MHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uZGV0YWlsc19faWNvbnMge1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHdpZHRoOiAyMTBweDtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgcGFkZGluZy1ib3R0b206IDYwcHg7XG59XG5cbi5kZXRhaWxzX19pY29uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM4MTg2OGU7XG4gICAgd2lkdGg6IDUzcHg7XG4gICAgaGVpZ2h0OiA1M3B4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC4ycztcbiAgICB0cmFuc2l0aW9uOiAuMnM7XG59XG5cbi5kZXRhaWxzX19pY29uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTliZDlhO1xufVxuXG4uZGV0YWlsc19faWNvbiBzcGFuIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MyU7XG4gICAgbGVmdDogNTAlO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC1zaXplOiAyOHB4O1xufVxuXG4uY3JlYXRpdmUtdGV4dCB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgLmNyZWF0aXZlLXRleHQge1xuICAgICAgICBwYWRkaW5nOiAwIDEwJTtcbiAgICB9XG59XG5cbi5jcmVhdGl2ZS10ZXh0X190aXRsZSB7XG4gICAgZm9udC1mYW1pbHk6IFwiT3BlblNhbnNcIjtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgY29sb3I6ICMzMzM7XG4gICAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMzBweDtcbn1cblxuLmNyZWF0aXZlLXRleHRfX3dyYXAge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGFkZGluZy1ib3R0b206IDgwcHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgIC5jcmVhdGl2ZS10ZXh0X193cmFwIHtcbiAgICAgICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAgICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIH1cbn1cblxuLmNyZWF0aXZlLXRleHRfX2xlZnQge1xuICAgIHBhZGRpbmctcmlnaHQ6IDEwMHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAuY3JlYXRpdmUtdGV4dF9fbGVmdCB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgfVxufVxuXG4uZmVhdHVyZWQge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiA3NXB4IDAgMCAwO1xufVxuXG4uZmVhdHVyZWRfX3N1YnRpdGxlIHtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICB3aWR0aDogNDUlO1xuICAgIG1pbi13aWR0aDogMzAwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDUwcHg7XG59XG5cbi5mZWF0dXJlZF9faW1hZ2VzIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uZmVhdHVyZWRfX2ltYWdlIHtcbiAgICB3aWR0aDogMzMuNSU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgaGVpZ2h0OiAzMTVweDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC40cztcbiAgICB0cmFuc2l0aW9uOiAuNHM7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxNjUzcHgpIHtcbiAgICAuZmVhdHVyZWRfX2ltYWdlIHtcbiAgICAgICAgaGVpZ2h0OiAyODBweDtcbiAgICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxNDYwcHgpIHtcbiAgICAuZmVhdHVyZWRfX2ltYWdlIHtcbiAgICAgICAgaGVpZ2h0OiAyNDBweDtcbiAgICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDU1cHgpIHtcbiAgICAuZmVhdHVyZWRfX2ltYWdlIHtcbiAgICAgICAgaGVpZ2h0OiAxODBweDtcbiAgICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3OTBweCkge1xuICAgIC5mZWF0dXJlZF9faW1hZ2Uge1xuICAgICAgICBoZWlnaHQ6IDEzMHB4O1xuICAgIH1cbn1cblxuLmZlYXR1cmVkX19pbWFnZSBpbWcge1xuICAgIHdpZHRoOiAxMjAlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgLXdlYmtpdC1ib3gtZmxleDogMTtcbiAgICAtbXMtZmxleDogMTtcbiAgICBmbGV4OiAxO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTY3cHgpIHtcbiAgICAuZmVhdHVyZWRfX2ltYWdlIGltZyB7XG4gICAgICAgIGhlaWdodDogMTUwJTtcbiAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgfVxufVxuXG4uZmVhdHVyZWRfX2ltYWdlOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTA1JTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogLjNzO1xuICAgIHRyYW5zaXRpb246IC4zcztcbn1cblxuLmZlYXR1cmVkX19pbWFnZTpob3Zlcjo6YWZ0ZXIge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xufVxuXG4uZmVhdHVyZWRfX2ltYWdlOmhvdmVyIC5mZWF0dXJlZF9faW1hZ2V0ZXh0IHtcbiAgICB0b3A6IDEwJTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmZlYXR1cmVkX19pbWFnZXRleHQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICBmb250LWZhbWlseTogJ1NvdXJjZVNhbnNQcm8nO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1zaXplOiBjYWxjKDE1cHggKyA1ICogKCgxMDB2dyAtIDMyMHB4KSAvIDEwNDApKTtcbiAgICB6LWluZGV4OiAxMDEwO1xuICAgIGZvbnQtd2VpZ2h0OiAxMDA7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAuNHM7XG4gICAgdHJhbnNpdGlvbjogLjRzO1xufVxuXG4uZmVhdHVyZWRfX2Zvb3RlciB7XG4gICAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL2ZlYXR1cmVkL2Zvb3Rlci5wbmdcIik7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbn1cblxuLmZlYXR1cmVkX19mb290ZXIgLndyYXBwZXIge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiBjYWxjKDEwcHggKyAyMCAqICgoMTAwdncgLSAzMjBweCkgLyAxMDQwKSk7XG4gICAgaGVpZ2h0OiBjYWxjKDkwcHggKyAyOCAqICgoMTAwdncgLSAzMjBweCkgLyAxMDQwKSk7XG59XG5cbi5mZWF0dXJlZF9fZm9vdGVyIC53cmFwcGVyIGg0IHtcbiAgICBjb2xvcjogI2ZmZmZmZjtcbn1cblxuLmZlYXR1cmVkX19mb290ZXIgLndyYXBwZXIgYSB7XG4gICAgYm9yZGVyLWNvbG9yOiAjZmZmZmZmO1xuICAgIGNvbG9yOiAjZmZmZmZmO1xufVxuXG4uZmVhdHVyZWRfX2J1dHRvbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpO1xuICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC4ycztcbiAgICB0cmFuc2l0aW9uOiAuMnM7XG59XG5cbi5zZXJ2aWNlcyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDgwcHggMCAwIDA7XG59XG5cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5OaGMzTXZYMlp2Ym5SekxuTmpjM01pTENKellYTnpMMTl0YVhocGJuTXVjMk56Y3lJc0luTmhjM012WDJkc2IySmhiQzV6WVhOeklpd2ljMkZ6Y3k5ZlpXeGxiV1Z1ZEhNdWMyRnpjeUlzSW5OaGMzTXZYM1poY21saFlteGxjeTV6WVhOeklpd2ljMkZ6Y3k5d1lYSjBhV0ZzY3k5ZmFHVmhaR1Z5TG5OaGMzTWlMQ0p6WVhOekwzQmhjblJwWVd4ekwxOWliM1Z1WTNrdWMyRnpjeUlzSW5OaGMzTXZjR0Z5ZEdsaGJITXZYMlJsZEdGcGJITXVjMkZ6Y3lJc0luTmhjM012Y0dGeWRHbGhiSE12WDJabFlYUjFjbVZrTG5OaGMzTWlMQ0p6WVhOekwzQmhjblJwWVd4ekwxOXpaWEoyYVdObGN5NXpZWE56SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQk8wVkJRMGtzYzBKQlFYTkNPMFZCUTNSQ0xHZERRVUZuUXl4RlFVRkJPenRCUVVWd1F6dEZRVU5KTEhWQ1FVRjFRanRGUVVOMlFpeDVRMEZCZVVNc1JVRkJRVHM3UVVGRk4wTTdSVUZEU1N3MFFrRkJORUk3UlVGRE5VSXNPRU5CUVRoRExFVkJRVUU3TzBGQlIyeEVPMFZCUTBrc05FSkJRVFJDTzBWQlF6VkNMRFJEUVVFMFF6dEZRVU0xUXl4blFrRkJaMEk3UlVGRGFFSXNhMEpCUVd0Q0xFVkJRVUU3TzBGQlIzUkNPMFZCUTBrc2NVSkJRWEZDTzBWQlEzSkNMSFZEUVVGMVF5eEZRVUZCT3p0QlEzSkNNME1zSzBKQlFVRTdRVUZQUVN3MlFrRkJRVHRCUVU5QkxEQkRRVUZCTzBGQlQwRXNkME5CUVVFN1FVRk5RU3d3UTBGQlFUdEJRVTlCTEdkRFFVRkJPMEZCVDBFc1lVRkJRVHRCUVU5QkxHbERRVUZCTzBGQlQwRXNhVU5CUVVFN1FVRlJRU3g1UWtGQlFUdEJRMmhGUVR0RlFVTkpMRlZCUVZVN1JVRkRWaXhUUVVGVE8wVkJRMVFzVTBGQlV5eEZRVUZCT3p0QlFVVmlPMFZCUTBrc09FSkJRWE5DTzFWQlFYUkNMSE5DUVVGelFpeEZRVUZCT3p0QlFVVXhRanRGUVVOSkxHRkJRV0VzUlVGQlFUczdRVUZIYWtJN1JVRkRTU3hYUVVGWE8wVkJRMWdzV1VGQldUdEZRVU5hTEdOQlFXTTdSVUZEWkN4blFrRkJaMEk3UlVGRGFFSXNaMEpCUVdkQ08wVkJRMmhDTEd0Q1FVRnJRaXhGUVVGQk96dEJRVU4wUWp0RlFVTkpMR2RDUVVGblFqdEZRVU5vUWl4VFFVRlRPMFZCUTFRc1ZVRkJWU3hGUVVGQk96dEJRVVZrTzBWQlEwa3NjVUpCUVhGQ08wVkJRM0pDTEdOQlFXTTdSVUZEWkN4MVFrRkJaVHRGUVVGbUxHVkJRV1VzUlVGQlFUczdRVUZGYmtJN1JVRkRTU3hUUVVGVE8wVkJRMVFzVlVGQlZTeEZRVUZCT3p0QlFVVmtPMFZCUTBrc2FVSkJRV2xDTzBWQlEycENMR05CUVdNN1JVRkRaQ3hwUWtGQmFVSXNSVUZCUVRzN1FVTnVRMnBDTEdkR1FVRkJPMEZCUTBvN1JVRkRTU3hoUVVGaE8wVkJRMklzYTBKQlFXdENPMFZCUTJ4Q0xGZEJRVmM3UlVGRFdDeFpRVUZaTzBWQlExb3NkVUpCUVdVN1JVRkJaaXhsUVVGbE8wVkJRMllzVFVGQlRUdEZRVU5PTEZWQlFWVTdSVUZEVml4aFFVRmhPMFZCUTJJc1pVRkJaU3hGUVVGQk8wVkdkME5tTzBsRmFrUktPMDFCV1ZFc1kwRkJZeXhGUVVGQkxFVkJjVUpGTzBWQmFrTjRRanRKUVdWUkxGZEJRVmM3U1VGRFdDeFhRVUZYTzBsQlExZ3NhMEpCUVd0Q08wbEJRMnhDTEhOQ1FVRnpRanRKUVVOMFFpeFRRVUZUTzBsQlExUXNWVUZCVlR0SlFVTldMR2xDUVVGcFFpeEZRVUZCTzBWQmNrSjZRanRKUVhWQ1VTeFhRVUZYTzBsQlExZ3NWMEZCVnp0SlFVTllMRmRCUVZjN1NVRkRXQ3hyUWtGQmEwSTdTVUZEYkVJc2MwSkJRWE5DTzBsQlEzUkNMSFZDUVVGbE8wbEJRV1lzWlVGQlpUdEpRVU5tTEdsQ1FVRnBRaXhGUVVGQk8wVkJOMEo2UWp0SlFTdENVU3hSUVVGUkxFVkJRVUU3UlVFdlFtaENPMGxCYVVOUkxGZEJRVmNzUlVGQlFUczdRVUZEYmtJN1JVRkZVU3hWUVVGVkxFVkJRVUU3TzBGQlJteENPMFZCUzFFc1VVRkJVVHRGUVVOU0xHbERRVUY1UWp0VlFVRjZRaXg1UWtGQmVVSXNSVUZCUVRzN1FVRk9ha003UlVGUlVTeFpRVUZaTzBWQlExb3NhME5CUVRCQ08xVkJRVEZDTERCQ1FVRXdRaXhGUVVGQk96dEJRVWRzUXp0RlFVTkpMRTFCUVUwN1JVRkRUaXhQUVVGUE8wVkJRMUFzWlVGQlpUdEZRVU5tTEZkQlFWYzdSVUZEV0N4WlFVRlpPMFZCUTFvc2IwTkJRVzFETzBWQlEyNURMRmRCUVZjN1JVRkRXQ3hyUWtGQmEwSTdSVUZEYkVJc1ZVRkJWVHRGUVVOV0xIVkNRVUZsTzBWQlFXWXNaVUZCWlR0RlFVTm1MRmRCUVZjc1JVRkJRVHM3UVVaU1dEdEZSVmRLTzBsQlJWRXNZMEZCWXp0SlFVTmtMRlZCUVZVN1NVRkRWaXhaUVVGWk8wbEJRMW9zYlVKQlFXMUNMRVZCUVVFc1JVRkJTenM3UVVGRmFFTXNhVU5CUVVFN1FVRkZRU3gzUTBGQlFUdEJRVVZCTzBWQlEwa3NWMEZCVnp0RlFVTllMRmxCUVZrN1JVRkRXaXhyUWtGQmEwSTdSVUZEYkVJc2VVSkROVVZWTzBWRU5rVldMR3RDUVVGclFqdEZRVU5zUWl4WFFVRlhPMFZCUTFnc1UwRkJVenRGUVVOVUxIRkRRVUUyUWp0VlFVRTNRaXcyUWtGQk5rSTdSVUZETjBJc1kwRkJZenRGUVVOa0xHVkJRV1U3UlVGRFppeDFRa0ZCWlR0RlFVRm1MR1ZCUVdVN1JVRkRaaXg1UkVGQk9FTTdWVUZCT1VNc2FVUkJRVGhETzBWQlF6bERMRFpDUVVFMlFpeEZRVUZCTzBWQlltcERPMGxCWlZFc1lVRkJZVHRKUVVOaUxEQkRRVUYxUXl4RlFVRkJPMFZCUlRORE8wbEJRMGtzVjBGQlZ6dEpRVU5ZTEdOQlFXTTdTVUZEWkN4WFFVRlhPMGxCUTFnc1ZVRkJWVHRKUVVOV0xEWkNRVUUyUWp0SlFVTTNRaXh6UWtGQmMwSTdTVUZEZEVJc2EwSkJRV3RDTzBsQlEyeENMRk5CUVZNN1NVRkRWQ3hSUVVGUk8wbEJRMUlzYzBSQlFUaERPMWxCUVRsRExEaERRVUU0UXp0SlFVTTVReXgxUWtGQmRVSTdTVUZEZGtJc2QwSkJRWGRDTEVWQlFVRTdPMEZCUldoRExDdENRVUZCTzBGQlIwRXNLME5CUVVFN1FVRkZRVHRGUVVOSkxEQkNRVUV3UWp0RlFVTXhRaXg1UWtGQmVVSTdSVUZEZWtJc1kwRkJZenRGUVVOa0xHZENRVUZuUWp0RlFVTm9RaXh0UWtGQmJVSTdSVUZEYmtJc1kwRkJjMEk3UlVZM1EzUkNMRzlFUVVGclJqdEZSU3REYkVZc2IwSkJRVzlDTEVWQlFVRTdPMEZCUlhoQ08wVkJRMGtzZFVKQlFYVkNPMFZCUTNaQ0xHTkJRWGxDTzBWQlEzcENMR3RDUVVGclFqdEZSbkJFYkVJc2IwUkJRV3RHTEVWQlFVRTdPMEZGZFVSMFJpeHZRa0ZCUVR0QlFVZEJMSFZDUVVGQk8wRkJSVUU3UlVZMVJFa3NiMFJCUVd0R08wVkZPRVJzUml4MVFrRkJkVUk3UlVGRGRrSXNZMEZCYzBJN1JVRkRkRUlzYVVKQlFXbENPMFZCUTJwQ0xHdENRVUZyUWp0RlFVTnNRaXh6UWtGQmMwSTdSVUZEZEVJc1dVRkJXVHRGUVVOYUxGbEJRVms3UlVGRFdpeHRRa0ZCYlVJN1JVRkRia0lzWlVGQlpUdEZRVU5tTEhWQ1FVRmxPMFZCUVdZc1pVRkJaVHRGUVVObUxHTkJRV01zUlVGQlFUczdRVUZGYkVJc2IwSkJRVUU3UVVGRlFTd3JRa0ZCUVR0QlFVVkJPMFZCUTBrc2FVSkJRV2xDTEVWQlFVRTdPMEZCUlhKQ08wVkJRMGtzWTBONFNsVXNSVUZCUVRzN1FVUXdTbVE3UlVGRlNTeGpRelZLVlN4RlFVRkJPenRCUTBSa08wVkJRMGtzYTBKQlFXdENPMFZCUTJ4Q0xGZEJRVmM3UlVGRFdDeGhRVUZoTzBWQlEySXNXVUZCV1R0RlFVTmFMR2RDUVVGblFpeEZRVUZCT3p0QlFVVm9RanRGUVVOSkxGbEJRVms3UlVGRFdpeFhRVUZYTzBWQlExZ3NhMEpCUVd0Q08wVkJRMnhDTEUxQlFVMDdSVUZEVGl4UFFVRlBPMFZCUTFBc1YwRkJWenRGUVVOWUxHOUNRVUZwUWp0TFFVRnFRaXhwUWtGQmFVSXNSVUZCUVRzN1FVRkhja0k3UlVGRFNTeHZRa0ZCWVR0RlFVRmlMRzlDUVVGaE8wVkJRV0lzWVVGQllUdEZRVU5pTEhsQ1FVRTRRanROUVVFNVFpeHpRa0ZCT0VJN1ZVRkJPVUlzT0VKQlFUaENPMFZCUXpsQ0xHbENRVUZwUWl4RlFVRkJPenRCUVVkeVFqdEZRVU5KTEd0Q1FVRnJRanRGUVVOc1FpeHJRa0ZCYTBJN1JVRkRiRUlzVTBGQlV6dEZRVU5VTEZGQlFWRTdSVUZEVWl4M1EwRkJaME03VlVGQmFFTXNaME5CUVdkRE8wVkJRMmhETEdkQ1FVRm5RaXhGUVVGQk8wVkJUbTVDTzBsQlUwOHNWMEZCVnp0SlFVTllMRzFDUVVGdFFqdEpRVU51UWl4dlFrRkJiMEk3U1VweFF6VkNMRzlFUVVGclJpeEZRVUZCTzBWSmFFUnFSanRKUVdWUExIRkNRVUZ4UWp0SlNtbEROMElzYjBSQlFXdEdPMGxKTDBJeFJTeHBRa0ZCYVVJN1NVRkRha0lzWjBKQlFXZENMRVZCUVVFN08wRkJSVFZDTzBWQlEwa3NiME5CUVdkRE8wVkJRMmhETEZsQlFWazdSVUZEV2l4clFrRkJhMEk3UlVGRGJFSXNWMEZCVnp0RlFVTllMRTFCUVUwN1JVRkRUaXhQUVVGUE8wVkJRMUFzVjBGQlZ5eEZRVUZCT3p0QlFWRllPMFZCUTBrc2IwSkJRVzlDTzBWQlEzQkNMR1ZCUVdVN1JVRkRaaXhwUWtGQmFVSTdSVUZEYWtJc1lVRkJZU3hGUVVGQk96dEJTbGhxUWp0RlNXTkJPMGxCUjFFc1ZVRkJWVHRKUVVOV0xHdENRVUZyUWp0SlFVTnNRaXh0UTBGQk1rSTdXVUZCTTBJc01rSkJRVEpDTzBsQlF6TkNMR1ZCUVdVN1NVRkRaaXhOUVVGTk8wbEJRMDRzVDBGQlR6dEpRVU5RTEZkQlFWYzdTVUZEV0N4aFFVRmhPMGxCUTJJc1lVRkJZVHRKUVVOaUxHZENRVUZuUWl4RlFVRkJMRVZCUVVzN08wRkJkRUpxUXp0RlFUQkNVU3h0UWtGQmJVSTdSVUZEYmtJc1ZVRkJWVHRGUVVOV0xHZERRVUYzUWp0VlFVRjRRaXgzUWtGQmQwSTdSVUZEZUVJc2RVSkJRV1U3UlVGQlppeGxRVUZsTEVWQlFVRTdPMEZCU1c1Q08wVkJRMGtzYjBKQlFXRTdSVUZCWWl4dlFrRkJZVHRGUVVGaUxHRkJRV0U3UlVGRFlpeFhRVUZYTEVWQlFVRTdSVXAyUTJZN1NVbHhRMEU3VFVGSlVTdzBRa0ZCYzBJN1RVRkJkRUlzTmtKQlFYTkNPMVZCUVhSQ0xEQkNRVUZ6UWp0alFVRjBRaXh6UWtGQmMwSTdUVUZEZEVJc2VVSkJRVzFDTzFWQlFXNUNMSE5DUVVGdFFqdGpRVUZ1UWl4dFFrRkJiVUk3VFVGRGJrSXNkMEpCUVhWQ08xVkJRWFpDTEhGQ1FVRjFRanRqUVVGMlFpeDFRa0ZCZFVJN1RVRkRka0lzY1VKQlFYRkNMRVZCUVVFc1JVRkJTenM3UVVGTGJFTTdSVUZEU1N4cFFrRkJhVUlzUlVGQlFUdEZTbXhFY2tJN1NVbHBSRUU3VFVGSFVTeHJRa0ZCYTBJc1JVRkJRU3hGUVdGbE8wVkJhRUo0UXp0SlFVdFBMR2xDUVVGcFFqdEpRVU5xUWl4clFrRkJhMEk3U1VGRGJFSXNOa0pCUVRaQ08wbEJRemRDTEcxQ1FVRnRRanRKUVVOdVFpeGxRVUZsTzBsQlEyWXNjVUpCUVhGQ0xFVkJRVUU3U1VvelJEZENPMDFKYVVSRE8xRkJXVmNzWlVGQlpUdFJRVU5tTEcxQ1FVRnRRanRSUVVOdVFpeHBRa0ZCYVVJc1JVRkJRU3hGUVVWVk8wbEJhRUowUXp0TlFXZENWeXh6UWtGQmMwSXNSVUZCUVRzN1FVTndTSFJETzBWQlEwa3NiMEpCUVdFN1JVRkJZaXh2UWtGQllUdEZRVUZpTEdGQlFXRTdSVUZEWWl4NVFrRkJPRUk3VFVGQk9VSXNjMEpCUVRoQ08xVkJRVGxDTERoQ1FVRTRRanRGUVVNNVFpeGpRVUZqTEVWQlFVRTdSVXhuUkdRN1NVdHVSRW83VFV3MlJVa3NiMFJCUVdkR0xFVkJRVUVzUlVzMVF6bERPMFZCZWtKc1F6dEpRVU5KTEZWQlFWVTdTVUZEVml4dFFrRkJiVUlzUlVGQlFUdEpUSGxEZGtJN1RVc3pRMEU3VVVGSlVTeFhRVUZYTEVWQlFVRXNSVUZCU3p0RlFVVjRRanRKUVVOSkxHTkJRWE5DTEVWQlFVRTdSVUZGTVVJN1NVRkRTU3h2UWtGQmIwSXNSVUZCUVR0RlFVVjJRanRKUVVWUExITkVRVUU0UXp0WlFVRTVReXc0UTBGQk9FTXNSVUZCUVR0RlFVVjBSRHRKUVVOSkxHOUNRVUZoTzBsQlFXSXNiMEpCUVdFN1NVRkJZaXhoUVVGaE8wbEJRMklzZVVKQlFXMUNPMUZCUVc1Q0xITkNRVUZ0UWp0WlFVRnVRaXh0UWtGQmJVSXNSVUZCUVR0SlFVWjBRanROUVV0UExGZEJRVmNzUlVGQlFUdE5USE5DYmtJN1VVc3pRa003VlV3eVJFUXNhMFJCUVRoRkxFVkJRVUVzUlV0c1JHaEVPMDFNYTBJNVFqdFJTek5DUXp0VlFWTlhMR0ZCUVdFc1JVRkJRU3hGUVVGTE96dEJRMnBEYkVNN1JVRkRTU3hyUWtGQmEwSTdSVUZEYkVJc2VVSkJRWGxDTzBWQlEzcENMR2xDUVVGcFFpeEZRVUZCTzBWQlMycENPMGxCUTBrc2IwSkJRVzlDTzBsQlEzQkNMR2RDUVVGblFqdEpRVU5vUWl4alFVRmpMRVZCUVVFN1JVRkZiRUk3U1VGRFNTeGpRVUZqTzBsQlEyUXNXVUZCV1R0SlFVTmFMRzlDUVVGaE8wbEJRV0lzYjBKQlFXRTdTVUZCWWl4aFFVRmhPMGxCUTJJc2VVSkJRVGhDTzFGQlFUbENMSE5DUVVFNFFqdFpRVUU1UWl3NFFrRkJPRUk3U1VGRE9VSXNiMEpCUVc5Q0xFVkJRVUU3UlVGRmVFSTdTVUZEU1N4alFVRmpPMGxCUTJRc2EwSkJRV3RDTzBsQlEyeENMR3RDUVVGclFqdEpRVU5zUWl4NVFrRkJlVUk3U1VGRGVrSXNWMEZCVnp0SlFVTllMRmxCUVZrN1NVRkRXaXhsUVVGbE8wbEJRMllzZFVKQlFXVTdTVUZCWml4bFFVRmxMRVZCUVVFN1NVRlNiRUk3VFVGWFR5eDVRa2c1UWtVc1JVRkJRVHRKUjIxQ1ZEdE5RV05QTEd0Q1FVRnJRanROUVVOc1FpeFJRVUZSTzAxQlExSXNVMEZCVXp0TlFVTlVMSGREUVVGblF6dGpRVUZvUXl4blEwRkJaME03VFVGRGFFTXNWMEZCVnp0TlFVTllMR1ZCUVdVc1JVRkJRVHM3UVVGRk0wSTdSVUZEU1N4blFrRkJaMElzUlVGQlFUdEZUbHBvUWp0SlRWZEtPMDFCUjFFc1kwRkJZeXhGUVVGQkxFVkJiMEpNTzBWQmFrSmlPMGxCUTBrc2RVSkJRWFZDTzBsQlEzWkNMR1ZCUVdVN1NVRkRaaXhYUVVGWE8wbEJRMWdzWjBKQlFXZENPMGxCUTJoQ0xHOUNRVUZ2UWl4RlFVRkJPMFZCUlhoQ08wbEJRMGtzYjBKQlFXRTdTVUZCWWl4dlFrRkJZVHRKUVVGaUxHRkJRV0U3U1VGRFlpeHZRa0ZCYjBJc1JVRkJRVHRKVGpGQ2VFSTdUVTEzUWtFN1VVRkpVU3cwUWtGQmMwSTdVVUZCZEVJc05rSkJRWE5DTzFsQlFYUkNMREJDUVVGelFqdG5Ra0ZCZEVJc2MwSkJRWE5DTEVWQlFVRXNSVUZCU3p0RlFVVnVRenRKUVVOSkxHOUNRVUZ2UWl4RlFVRkJPMGxPTDBKNFFqdE5UVGhDUVR0UlFVZFJMR2RDUVVGblFpeEZRVUZCTEVWQlFVczdPMEZETDBScVF6dEZRVU5KTEd0Q1FVRnJRanRGUVVOc1FpeHRRa0ZCYlVJc1JVRkJRVHRGUVV0dVFqdEpRVU5KTEdOQlFXTTdTVUZEWkN4VlFVRlZPMGxCUTFZc1owSkJRV2RDTzBsQlEyaENMRzlDUVVGdlFpeEZRVUZCTzBWQlJYaENPMGxCUTBrc2IwSkJRV0U3U1VGQllpeHZRa0ZCWVR0SlFVRmlMR0ZCUVdFN1NVRkRZaXg1UWtGQmJVSTdVVUZCYmtJc2MwSkJRVzFDTzFsQlFXNUNMRzFDUVVGdFFqdEpRVU51UWl4NVFrRkJPRUk3VVVGQk9VSXNjMEpCUVRoQ08xbEJRVGxDTERoQ1FVRTRRanRKUVVNNVFpeG5Ra0ZCWjBJN1NVRkRhRUlzWlVGQlpUdEpRVU5tTEd0Q1FVRnJRaXhGUVVGQk8wVkJSWFJDTzBsQlEwa3NXVUZCV1R0SlFVTmFMR2RDUVVGblFqdEpRVU5vUWl4clFrRkJhMEk3U1VGRGJFSXNZVUZCWVR0SlFVTmlMSFZDUVVGbE8wbEJRV1lzWlVGQlpTeEZRVUZCTzBsUWVVSnVRanROVHpsQ1FUdFJRVTlSTEdGQlFXRXNSVUZCUVN4RlFTdENVenRKVUZJNVFqdE5UemxDUVR0UlFWTlJMR0ZCUVdFc1JVRkJRU3hGUVRaQ1V6dEpVRkk1UWp0TlR6bENRVHRSUVZkUkxHRkJRV0VzUlVGQlFTeEZRVEpDVXp0SlVGSTVRanROVHpsQ1FUdFJRV0ZSTEdGQlFXRXNSVUZCUVN4RlFYbENVenRKUVhSRE4wSTdUVUZuUWs4c1YwRkJWenROUVVOWUxHZENRVUZuUWp0TlFVTm9RaXh0UWtGQlR6dFZRVUZRTEZkQlFVODdZMEZCVUN4UFFVRlBMRVZCUVVFN1RWQlpaanRSVHpsQ1F6dFZRVzlDVnl4WlFVRlpPMVZCUTFvc1YwRkJWeXhGUVVGQkxFVkJRVXM3U1VGeVFqTkNPMDFCZDBKUExGZEJRVmM3VFVGRFdDeGpRVUZqTzAxQlEyUXNhMEpCUVd0Q08wMUJRMnhDTEUxQlFVMDdUVUZEVGl4UFFVRlBPMDFCUTFBc1YwRkJWenROUVVOWUxGbEJRVms3VFVGRFdpeHZRMEZCYVVNN1RVRkRha01zZFVKQlFXVTdUVUZCWml4bFFVRmxMRVZCUVVFN1NVRm9RM1JDTzAxQmJVTlBMRzlEUVVFMFFqdGpRVUUxUWl3MFFrRkJORUlzUlVGQlFUdEpRVzVEYmtNN1RVRnhRMDhzVVVGQlVUdE5RVU5TTEdsQ1FVRnBRaXhGUVVGQk8wVkJSM3BDTzBsQlEwa3NhMEpCUVd0Q08wbEJRMnhDTEZGQlFWRTdTVUZEVWl4VFFVRlRPMGxCUTFRc2QwTkJRV2RETzFsQlFXaERMR2REUVVGblF6dEpRVU5vUXl4alFVRmpPMGxCUTJRc05FSkJRVFJDTzBsQlF6VkNMSGxDUVVGNVFqdEpVRVUzUWl4dlJFRkJhMFk3U1U5Qk9VVXNZVUZCWVR0SlFVTmlMR2RDUVVGblFqdEpRVU5vUWl4MVFrRkJaVHRKUVVGbUxHVkJRV1VzUlVGQlFUdEZRVVZ1UWp0SlFVTkpMRFpEUVVFMlF6dEpRVU0zUXl4elFrRkJjMElzUlVGQlFUdEpRVVo2UWp0TlFVdFBMRzlDUVVGaE8wMUJRV0lzYjBKQlFXRTdUVUZCWWl4aFFVRmhPMDFCUTJJc2VVSkJRVGhDTzFWQlFUbENMSE5DUVVFNFFqdGpRVUU1UWl3NFFrRkJPRUk3VFVGRE9VSXNlVUpCUVcxQ08xVkJRVzVDTEhOQ1FVRnRRanRqUVVGdVFpeHRRa0ZCYlVJN1RWQk1NMElzYlVSQlFXZEdPMDFCWVdoR0xHdEVRVUVyUlN4RlFVRkJPMDFQWmpsRk8xRkJWMWNzWTBGQll5eEZRVUZCTzAxQldIcENPMUZCWVZjc2NVSkJRWEZDTzFGQlEzSkNMR05CUVdNc1JVRkJRVHRGUVVNeFFqdEpRVU5KTERCRFFVRXdRenRKUVVNeFF5eHJRa0ZCYTBJN1NVRkRiRUlzZFVKQlFXVTdTVUZCWml4bFFVRmxMRVZCUVVFN08wRkROMFoyUWp0RlFVTkpMR3RDUVVGclFqdEZRVU5zUWl4dFFrRkJiVUlzUlVGQlFTSXNJbVpwYkdVaU9pSmhjSEF1WTNOeklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lRR1p2Ym5RdFptRmpaU0I3WEhKY2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0owSnBaMHB2YUc0bk8xeHlYRzRnSUNBZ2MzSmpPaUIxY213b0p5NHVMMlp2Ym5SekwwSkpSMHBQU0U0dWIzUm1KeWxjY2x4dWZWeHlYRzVBWm05dWRDMW1ZV05sSUh0Y2NseHVJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQW5UM0JsYmxOaGJuTW5PMXh5WEc0Z0lDQWdjM0pqT2lCMWNtd29KeTR1TDJadmJuUnpMMDl3Wlc1VFlXNXpMVkpsWjNWc1lYSXVkSFJtSnlsY2NseHVmVnh5WEc1QVptOXVkQzFtWVdObElIdGNjbHh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUFuVTI5MWNtTmxVMkZ1YzFCeWJ5YzdYSEpjYmlBZ0lDQnpjbU02SUhWeWJDZ25MaTR2Wm05dWRITXZVMjkxY21ObFUyRnVjMUJ5YnkxU1pXZDFiR0Z5TG5SMFppY3BYSEpjYm4xY2NseHVJQ0FnSUZ4eVhHNUFabTl1ZEMxbVlXTmxJSHRjY2x4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lBblUyOTFjbU5sVTJGdWMxQnlieWM3WEhKY2JpQWdJQ0J6Y21NNklIVnliQ2duTGk0dlptOXVkSE12VTI5MWNtTmxVMkZ1YzFCeWJ5MU1hV2RvZEM1MGRHWW5LU0E3WEhKY2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ01UQXdPMXh5WEc0Z0lDQWdabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNPMXh5WEc1OVhISmNibHh5WEc1QVptOXVkQzFtWVdObElIdGNjbHh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUFuVW05aWIzUnZKenRjY2x4dUlDQWdJSE55WXpvZ2RYSnNLQ2N1TGk5bWIyNTBjeTlTYjJKdmRHOHRVbVZuZFd4aGNpNTBkR1luS1Z4eVhHNTlYSEpjYmx4eVhHNWNjbHh1SWl3aVhISmNiaThxSUV4aGNtZGxJR1JsYzJ0MGIzQnpJR0Z1WkNCc1lYQjBiM0J6SUNvdlhISmNia0J0YVhocGJpQnRkekV4T0RBZ2UxeHlYRzRnSUNBZ1FHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklERXhPREJ3ZUNsN1hISmNiaUFnSUNBZ0lDQWdRR052Ym5SbGJuUTdYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVYSEpjYmk4cUlGTndaV05wWVd3Z2MybDZaU0JtYjNJZ1oyRnNiR1Z5ZVNBcUwxeHlYRzVBYldsNGFXNGdiWGN4TURNd0lIdGNjbHh1SUNBZ0lFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQXhNRE13Y0hncGUxeHlYRzRnSUNBZ0lDQWdJRUJqYjI1MFpXNTBPMXh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc0dktpQk1ZVzVrYzJOaGNHVWdkR0ZpYkdWMGN5QmhibVFnYldWa2FYVnRJR1JsYzJ0MGIzQnpJQ292WEhKY2JrQnRhWGhwYmlCdGR6azNPU0I3WEhKY2JpQWdJQ0JBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nT1RjNWNIZ3BlMXh5WEc0Z0lDQWdJQ0FnSUVCamIyNTBaVzUwTzF4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmx4eVhHNHZLaUJRYjNKMGNtRnBkQ0IwWVdKc1pYUnpJR0Z1WkNCemJXRnNiQ0JrWlhOcmRHOXdjeUFxTDF4eVhHNUFiV2w0YVc0Z2JYYzNOamdnZTF4eVhHNGdJQ0FnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURjMk9IQjRLWHRjY2x4dUlDQWdJQ0FnSUNCQVkyOXVkR1Z1ZER0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc0dktpQk1ZVzVrYzJOaGNHVWdjR2h2Ym1WeklHRnVaQ0J3YjNKMGNtRnBkQ0IwWVdKc1pYUnpJQ292WEhKY2JrQnRhWGhwYmlCdGR6WXdNQ0I3WEhKY2JpQWdJQ0JBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTmpBd2NIZ3BlMXh5WEc0Z0lDQWdJQ0FnSUVCamIyNTBaVzUwTzF4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmx4eVhHNHZLaUJRYjNKMGNtRnBkQ0J3YUc5dVpYTWdZVzVrSUhOdFlXeHNaWElnS2k5Y2NseHVRRzFwZUdsdUlHMTNORGd3SUh0Y2NseHVJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBME9EQndlQ2w3WEhKY2JpQWdJQ0FnSUNBZ1FHTnZiblJsYm5RN1hISmNiaUFnSUNCOVhISmNibjFjY2x4dVhISmNiaThxSUVsd2FHOXVaU0ExSUNvdlhISmNia0J0YVhocGJpQnRkek15TUNCN1hISmNiaUFnSUNCQWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ016SXdjSGdwZTF4eVhHNGdJQ0FnSUNBZ0lFQmpiMjUwWlc1ME8xeHlYRzRnSUNBZ2ZWeHlYRzU5WEhKY2JseHlYRzR2S2lCTmRXeDBlWEIxY25CdmMyVWdiV0Y0TFhkcFpIUm9JRzFwZUdsdUlDb3ZYSEpjYmtCdGFYaHBiaUJ0ZHlna2QybGtkR2dwSUh0Y2NseHVJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBa2QybGtkR2dnS3lBbmNIZ25LU0I3WEhKY2JpQWdJQ0FnSUVCamIyNTBaVzUwTzF4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmx4eVhHNHZLaUJOZFd4MGVYQjFjbkJ2YzJVZ2JXbHVMWGRwWkhSb0lHMXBlR2x1SUNvdlhISmNia0J0YVhocGJpQnRhVzUzS0NSM2FXUjBhQ2tnZTF4eVhHNGdJQ0FnUUcxbFpHbGhJQ2h0YVc0dGQybGtkR2c2SUNSM2FXUjBhQ0FySUNkd2VDY3BJSHRjY2x4dUlDQWdJQ0FnUUdOdmJuUmxiblE3WEhKY2JpQWdJQ0I5WEhKY2JuMWNjbHh1WEhKY2JseHlYRzR2S2lCU1pYTndiMjV6YVhabElIQmhjbUZ0WlhSeWN5QXFMMXh5WEc1Y2NseHVKRzFoZUZkcFpIUm9PaUF4TXpZd08xeHlYRzVjY2x4dVFHMXBlR2x1SUdGa1lYQjBhWFpsTFdadmJuUW9KSEJqVTJsNlpTd2dKRzF2WWxOcGVtVXBJSHRjY2x4dUlDQWdJQ1JoWkdSVGFYcGxPaUFrY0dOVGFYcGxJQzBnSkcxdllsTnBlbVU3WEhKY2JpQWdJQ0FrYldGNFYybGtkR2c2SUNSdFlYaFhhV1IwYUNBdElETXlNRHRjY2x4dUlDQWdJR1p2Ym5RdGMybDZaVG9nWTJGc1l5Z2pleVJ0YjJKVGFYcGxJQ3NnY0hoOUlDc2dJM3NrWVdSa1UybDZaWDBnS2lBb0tERXdNSFozSUMwZ016SXdjSGdwSUM4Z0kzc2tiV0Y0VjJsa2RHaDlLU2s3WEhKY2JuMWNjbHh1WEhKY2JrQnRhWGhwYmlCaFpHRndkR2wyWlMxd1lXUmthVzVuS0NSd1kxTnBlbVVzSUNSdGIySlRhWHBsS1NCN1hISmNiaUFnSUNBa1lXUmtVMmw2WlRvZ0pIQmpVMmw2WlNBdElDUnRiMkpUYVhwbE8xeHlYRzRnSUNBZ0pHMWhlRmRwWkhSb09pQWtiV0Y0VjJsa2RHZ2dMU0F6TWpBN1hISmNiaUFnSUNCd1lXUmthVzVuT2lCallXeGpLQ043SkcxdllsTnBlbVVnS3lCd2VIMGdLeUFqZXlSaFpHUlRhWHBsZlNBcUlDZ29NVEF3ZG5jZ0xTQXpNakJ3ZUNrZ0x5QWpleVJ0WVhoWGFXUjBhSDBwS1R0Y2NseHVmVnh5WEc1Y2NseHVRRzFwZUdsdUlHRmtZWEIwYVhabExYZHBaSFJvS0NSd1kxTnBlbVVzSUNSdGIySlRhWHBsS1NCN1hISmNiaUFnSUNBa1lXUmtVMmw2WlRvZ0pIQmpVMmw2WlNBdElDUnRiMkpUYVhwbE8xeHlYRzRnSUNBZ0pHMWhlRmRwWkhSb09pQWtiV0Y0VjJsa2RHZ2dMU0F6TWpBN1hISmNiaUFnSUNCM2FXUjBhRG9nWTJGc1l5Z2pleVJ0YjJKVGFYcGxJQ3NnY0hoOUlDc2dJM3NrWVdSa1UybDZaWDBnS2lBb0tERXdNSFozSUMwZ016SXdjSGdwSUM4Z0kzc2tiV0Y0VjJsa2RHaDlLU2s3WEhKY2JuMWNjbHh1WEhKY2JrQnRhWGhwYmlCaFpHRndkR2wyWlMxb1pXbG5hSFFvSkhCalUybDZaU3dnSkcxdllsTnBlbVVwSUh0Y2NseHVYSEpjYmlBZ0lDQWtZV1JrVTJsNlpUb2dKSEJqVTJsNlpTQXRJQ1J0YjJKVGFYcGxPMXh5WEc0Z0lDQWdKRzFoZUZkcFpIUm9PaUFrYldGNFYybGtkR2dnTFNBek1qQTdYSEpjYmlBZ0lDQm9aV2xuYUhRNklHTmhiR01vSTNza2JXOWlVMmw2WlNBcklIQjRmU0FySUNON0pHRmtaRk5wZW1WOUlDb2dLQ2d4TURCMmR5QXRJRE15TUhCNEtTQXZJQ043SkcxaGVGZHBaSFJvZlNrcE8xeHlYRzU5WEhKY2JseHlYRzRpTENJcUlIdGNiaUFnSUNCd1lXUmthVzVuT2lBd08xeHVJQ0FnSUcxaGNtZHBiam9nTUR0Y2JpQWdJQ0JpYjNKa1pYSTZJREE3SUgxY2JseHVLaXdnS2pwaVpXWnZjbVVzSUNvNllXWjBaWElnZTF4dUlDQWdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNnN0lIMWNibHh1S2pwbWIyTjFjeXdnS2pwaFkzUnBkbVVnZTF4dUlDQWdJRzkxZEd4cGJtVTZJRzV2Ym1VN0lIMWNibHh1WEc0dVkyOXVkR0ZwYm1WeUlIdGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNCb1pXbG5hSFE2SURFd01DVTdYRzRnSUNBZ2JXRnlaMmx1T2lBd0lHRjFkRzg3WEc0Z0lDQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNiaUFnSUNCdGFXNHRkMmxrZEdnNklESTFNSEI0TzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHNnZlZ4dWRXd2dlMXh1SUNBZ0lHeHBjM1F0YzNSNWJHVTZJRzV2Ym1VN1hHNGdJQ0FnYldGeVoybHVPaUF3TzF4dUlDQWdJSEJoWkdScGJtYzZJREE3SUgxY2JseHVZU0I3WEc0Z0lDQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dUlDQWdJR052Ykc5eU9pQnBibWhsY21sME8xeHVJQ0FnSUhSeVlXNXphWFJwYjI0NklDNHljenNnZlZ4dVhHNW9NU3dnYURJc0lHZ3pMQ0JvTkNCN1hHNGdJQ0FnYldGeVoybHVPaUF3TzF4dUlDQWdJSEJoWkdScGJtYzZJREE3SUgxY2JseHVMbmR5WVhCd1pYSWdlMXh1SUNBZ0lHMWhlQzEzYVdSMGFEb2dNVEUxTUhCNE8xeHVJQ0FnSUcxaGNtZHBiam9nTUNCaGRYUnZPMXh1SUNBZ0lIQmhaR1JwYm1jNklEQWdNVFZ3ZUNBd095QjlYRzVjYmx4dVhHNGlMQ0pjYmlBZ0lDQXZLaUF0TFMwdExTQkNkWEpuWlhJZ2JXVnVkU0JqYkdGemN5d2dZMnh2YzJWa0lHMWxiblVnWTJ4aGMzTWdZVzVrSUdKaFkydG5jbTkxYm1RZ1ptOXlJRzF2WW1sc1pTQXRMUzB0TFMwZ0tpOWNiaTVpZFhKblpYSXRiV1Z1ZFNCN1hHNGdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNGdJQ0FnZDJsa2RHZzZJRFF3Y0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUF6TUhCNE8xeHVJQ0FnSUhSeVlXNXphWFJwYjI0NklDNHpjenRjYmlBZ0lDQjBiM0E2SURBN1hHNGdJQ0FnY21sbmFIUTZJREJ3ZUR0Y2JpQWdJQ0I2TFdsdVpHVjRPaUF4TURBd08xeHVJQ0FnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmx4dUlDQWdJRUJwYm1Oc2RXUmxJRzEzS0RneU1Da2dlMXh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6c2dmVnh1WEc0Z0lDQWdjM0JoYmlCN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJREp3ZUR0Y2JpQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpabVptTzF4dUlDQWdJQ0FnSUNCMGIzQTZJREV6Y0hnN1hHNGdJQ0FnSUNBZ0lHOXdZV05wZEhrNklERTdYRzRnSUNBZ0lDQWdJR0p5WldGckxYSmhaR2wxY3pvZ01uQjRPeUI5WEc0Z0lDQWdKanBoWm5SbGNpd2dKanBpWldadmNtVWdlMXh1SUNBZ0lDQWdJQ0JqYjI1MFpXNTBPaUJjSWx3aU8xeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF5Y0hnN1hHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMlptWmp0Y2JpQWdJQ0FnSUNBZ2RISmhibk5wZEdsdmJqb2dMak56TzF4dUlDQWdJQ0FnSUNCaWNtVmhheTF5WVdScGRYTTZJREp3ZURzZ2ZWeHVJQ0FnSUNZNlltVm1iM0psSUh0Y2JpQWdJQ0FnSUNBZ2RHOXdPaUF3Y0hnN0lIMWNiaUFnSUNBbU9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUNBZ1ltOTBkRzl0T2lBd2NIZzdJSDBnZlZ4dUxtTnNiM05sSUh0Y2JpQWdJQ0J6Y0dGdUlIdGNiaUFnSUNBZ0lDQWdiM0JoWTJsMGVUb2dNRHNnZlZ4dVhHNGdJQ0FnSmpwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNCMGIzQTZJRGx3ZUR0Y2JpQWdJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQnliM1JoZEdVb01qSTFaR1ZuS1RzZ2ZWeHVJQ0FnSUNZNllXWjBaWElnZTF4dUlDQWdJQ0FnSUNCaWIzUjBiMjA2SURFNWNIZzdYRzRnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLQzB5TWpWa1pXY3BPeUI5SUgxY2JseHVYRzR1WW1jdGJXOWlhV3hsSUh0Y2JpQWdJQ0IwYjNBNklEQTdYRzRnSUNBZ2JHVm1kRG9nTUR0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nWm1sNFpXUTdYRzRnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUNBZ2FHVnBaMmgwT2lBeE1EQWxPMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklISm5ZbUVvTUN3Z01Dd2dNQ3dnTGprcE8xeHVJQ0FnSUhvdGFXNWtaWGc2SUMweE8xeHVJQ0FnSUhacGMybGlhV3hwZEhrNklHaHBaR1JsYmp0Y2JpQWdJQ0J2Y0dGamFYUjVPaUF3TzF4dUlDQWdJSFJ5WVc1emFYUnBiMjQ2SUM0MWN6dGNiaUFnSUNCdmRtVnlabXh2ZHpvZ1lUc2dmVnh1WEc1Y2JpNWlaMkZqZEdsMlpTQjdYRzRnSUNBZ1FHbHVZMngxWkdVZ2JYY29PREl3S1NCN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnSUNCdmNHRmphWFI1T2lBeE8xeHVJQ0FnSUNBZ0lDQjZMV2x1WkdWNE9pQTVPVGs3WEc0Z0lDQWdJQ0FnSUhacGMybGlhV3hwZEhrNklIWnBjMmxpYkdVN0lIMGdmVnh1WEc0dktpQXRMUzB0TFNCbGJtUWdiVzlpYVd4bElHSnNiMk5ySUMwdExTMHRJQ292WEc1Y2JpOHFJQzB0TFMwZ1NHVmhaR1Z5SUhKdmRXNWtJR1J2ZDI0Z1luVjBkRzl1SUMwdExTMHRJQ292WEc1Y2JpNWtiM2R1TFdKMWRIUnZiaUI3WEc0Z0lDQWdkMmxrZEdnNklETTJjSGc3WEc0Z0lDQWdhR1ZwWjJoME9pQXpObkI0TzF4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklEVXdKVHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtkSFZ5Y1R0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdZbTkwZEc5dE9pQTJkbWc3WEc0Z0lDQWdiR1ZtZERvZ05UQWxPMXh1SUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxLQzAxTUNVc0lEQXBPMXh1SUNBZ0lHMWhjbWRwYmpvZ01DQmhkWFJ2TzF4dUlDQWdJR04xY25OdmNqb2djRzlwYm5SbGNqdGNiaUFnSUNCMGNtRnVjMmwwYVc5dU9pQXVNM003WEc0Z0lDQWdZbTk0TFhOb1lXUnZkem9nT0hCNElEaHdlQ0E0Y0hnZ0xURXhjSGdnY21kaVlTZ3dMREFzTUN3d0xqYzFLVHRjYmlBZ0lDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ0lDQW1PbWh2ZG1WeUlIdGNiaUFnSUNBZ0lDQWdZbTkwZEc5dE9pQTJMaloyYUR0Y2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ2NtZGlZU2d5TlRVc01qVTFMREkxTlN3d0xqVXBPeUI5WEc1Y2JpQWdJQ0FtWDE5aGNuSnZkeUI3WEc0Z0lDQWdJQ0FnSUdOdmJuUmxiblE2SUNjbk8xeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBM2NIZzdYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQTNjSGc3WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0FnSUNBZ0lDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQWpabVptTzF4dUlDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnSUNBZ0lHeGxablE2SURVd0pUdGNiaUFnSUNBZ0lDQWdkRzl3T2lBME5pVTdYRzRnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsS0MwMU1DVXNJQzAxTUNVcElISnZkR0YwWlNnME5XUmxaeWs3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTEwYjNBNklIUnlZVzV6Y0dGeVpXNTBPMXh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRiR1ZtZERvZ2RISmhibk53WVhKbGJuUTdJSDBnZlZ4dVhHNHZLaUF0TFMwdExTQmxibVFnWkc5M2JpQmlkWFIwYjI0Z0xTMHRMUzBxTDF4dVhHNWNiaThxSUMwdExTMHRJRUpzYjJOcklIUnBkR3hsSUdGdVpDQjBaWGgwSUdWNGRHVnVjMmx2YmlBdExTMHRMU0FxTDF4dVhHNHVZbXh2WTJzdGRHbDBiR1VnZTF4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lCVGIzVnlZMlZUWVc1elVISnZPMXh1SUNBZ0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklESTdYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJREV3TUR0Y2JpQWdJQ0JzWlhSMFpYSXRjM0JoWTJsdVp6b2dOSEI0TzF4dUlDQWdJR052Ykc5eU9pQnlaMklvTlRFc0lEVTVMQ0EzTUNrN1hHNGdJQ0FnUUdsdVkyeDFaR1VnWVdSaGNIUnBkbVV0Wm05dWRDZ3lNQ3dnTVRZcE8xeHVJQ0FnSUhCaFpHUnBibWN0WW05MGRHOXRPaUF5TlhCNE95QjlYRzVjYmk1aWJHOWpheTEwWlhoMElIdGNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dYQ0pQY0dWdVUyRnVjMXdpTzF4dUlDQWdJR052Ykc5eU9pQnlaMklvTVRJNUxDQXhNelFzSURFME1pazdYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREV1TnpnMk8xeHVJQ0FnSUVCcGJtTnNkV1JsSUdGa1lYQjBhWFpsTFdadmJuUW9NVFFzSURFeEtUc2dmVnh1WEc0dktpQXRMUzB0TFNCbGJtUWdMUzB0TFMwZ0tpOWNibHh1WEc0dktpQXRMUzB0TFNCQ2RYUjBiMjRnTFMwdExTMGdLaTljYmx4dUxtSjBiaUI3WEc0Z0lDQWdRR2x1WTJ4MVpHVWdZV1JoY0hScGRtVXRabTl1ZENneE5pd2dNVEFwTzF4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lCY0lrOXdaVzVUWVc1elhDSTdYRzRnSUNBZ1kyOXNiM0k2SUhKbllpZzFNU3dnTlRrc0lEY3dLVHRjYmlBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTkRCd2VEdGNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJQ0FnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSXpBd01EdGNiaUFnSUNCM2FXUjBhRG9nTVRRd2NIZzdYRzRnSUNBZ2FHVnBaMmgwT2lBME1IQjRPMXh1SUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURJd2NIZzdYRzRnSUNBZ1kzVnljMjl5T2lCd2IybHVkR1Z5TzF4dUlDQWdJSFJ5WVc1emFYUnBiMjQ2SUM0eGN6dGNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWphenNnZlZ4dVhHNHZLaUF0TFMwdExTQmxibVFnTFMwdExTMGdLaTljYmx4dUx5b2dMUzB0TFMwZ1ZHVjRkQ0JtYjNKdFlYUnBibWNnTFMwdExTMGdLaTljYmx4dUxtSnZiR1FnZTF4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtPeUI5WEc1Y2JpNTBkWEp4SUh0Y2JpQWdJQ0JqYjJ4dmNqb2dKSFIxY25FN0lIMWNibHh1TG5SMWNuRXRZaUI3WEc0Z0lDQWdRR1Y0ZEdWdVpDQXVZbTlzWkR0Y2JpQWdJQ0JqYjJ4dmNqb2dKSFIxY25FN0lIMWNibHh1WEc1Y2JseHVYRzRpTENJdkx5QmpiMnh2Y25OY2JpUjBkWEp4T2lBak1UbGlaRGxoTzF4dUlpd2lhR1ZoWkdWeUlIdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNGdJQ0FnWTI5c2IzSTZJQ05tWm1ZN1hHNGdJQ0FnYUdWcFoyaDBPaUF4TURCMmFEdGNiaUFnSUNCM2FXUjBhRG9nTVRBd2RuYzdYRzRnSUNBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmpzZ2ZWeHVMbWhsWVdSbGNpQjdYRzRnSUNBZ0psOWZZbWNnZTF4dUlDQWdJQ0FnSUNCb1pXbG5hSFE2SURFd01DVTdYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnSUNBZ0lIUnZjRG9nTUR0Y2JpQWdJQ0FnSUNBZ2JHVm1kRG9nTUR0Y2JpQWdJQ0FnSUNBZ2VpMXBibVJsZURvZ0xUSTdYRzRnSUNBZ0lDQWdJRzlpYW1WamRDMW1hWFE2SUdOdmRtVnlPeUI5WEc1Y2JseHVJQ0FnSUNaZlgzUnZjQ0I3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ0lDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmp0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJRE00Y0hnN0lIMWNibHh1WEc0Z0lDQWdKbDlmYUdWaFpHVnlMWFJwZEd4bElIdGNiaUFnSUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdJQ0FnSUd4bFpuUTZJRFV3SlR0Y2JpQWdJQ0FnSUNBZ2RHOXdPaUExTUNVN1hHNGdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxLQzAxTUNVc0lDMDFNQ1VwTzF4dUlDQWdJQ0FnSUNCdFlYZ3RkMmxrZEdnNklEWXdNSEI0TzF4dVhHNGdJQ0FnSUNBZ0lDNWliRzlqYXkxMGFYUnNaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0kyWm1aanRjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGxkSFJsY2kxemNHRmphVzVuT2lBM2NIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nTVRWd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUdGa1lYQjBhWFpsTFdadmJuUW9NelVzSURJMktUc2dmVnh1WEc0Z0lDQWdJQ0FnSUM1b1pXRmtaWEl0YzNWaWRHbDBiR1VnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxbVlXMXBiSGs2SUU5d1pXNVRZVzV6TzF4dUlDQWdJQ0FnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdZV1JoY0hScGRtVXRabTl1ZENneE5pd2dNVElwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFdU56VTdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dNVEF3T3lCOUlIMGdmVnh1WEc0dVltY3RabTl1SUh0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJ5WjJKaEtEQXNNQ3d3TEM0ektUdGNiaUFnSUNCb1pXbG5hSFE2SURFd01DVTdYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUhSdmNEb2dNRHRjYmlBZ0lDQnNaV1owT2lBd08xeHVJQ0FnSUhvdGFXNWtaWGc2SUMweE95QjlYRzVjYmx4dVhHNWNiaTUwYjNBdGJXVnVkU0I3WEc1Y2JseHVJQ0FnSUNaZlgyeHZaMjhnZTF4dUlDQWdJQ0FnSUNCbWIyNTBMV1poYldsc2VUb2dRbWxuU205b2JqdGNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF5TlhCNE8xeHVJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTUM0ME9EdGNiaUFnSUNBZ0lDQWdlaTFwYm1SbGVEb2dNVEF3TURzZ2ZWeHVYRzVjYmlBZ0lDQW1YMTl1WVhZZ2UxeHVJQ0FnSUNBZ0lDQkFhVzVqYkhWa1pTQnRkeWc0TWpBcElIdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2IzQmhZMmwwZVRvZ01EdGNiaUFnSUNBZ0lDQWdJQ0FnSUhacGMybGlhV3hwZEhrNklHaHBaR1JsYmp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV1Nnek1IQjRLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQm1hWGhsWkR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJ2Y0RvZ01EdGNiaUFnSUNBZ0lDQWdJQ0FnSUd4bFpuUTZJREE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ01UQXdkbWc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjZMV2x1WkdWNE9pQXhNREF3TzF4dUlDQWdJQ0FnSUNBZ0lDQWdiM1psY21ac2IzYzZJSE5qY205c2JEc2dmU0I5WEc1Y2JseHVJQ0FnSUM1dGIySnBiR1V0WVdOMGFYWmxJSHRjYmlBZ0lDQWdJQ0FnZG1semFXSnBiR2wwZVRvZ2RtbHphV0pzWlR0Y2JpQWdJQ0FnSUNBZ2IzQmhZMmwwZVRvZ01UdGNiaUFnSUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZaS0RBcE8xeHVJQ0FnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPaUF1TTNNN0lIMWNibHh1WEc1Y2JpQWdJQ0FtWDE5c2FYTjBJSHRjYmlBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnSUNBZ0lDQWdkMmxrZEdnNklHRjFkRzg3WEc0Z0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUcxM0tEZ3lNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklHTmxiblJsY2p0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJoWkdScGJtYzZJREV3ZG1nZ01DQTFkbWdnTURzZ2ZTQjlYRzVjYmx4dVhHNWNiaUFnSUNBbVgxOXBkR1Z0SUh0Y2JpQWdJQ0FnSUNBZ2JXRnlaMmx1T2lBd0lEQWdNQ0F5Y0hnN1hHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHMTNLRGd5TUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dOM1pvT3lCOVhHNGdJQ0FnSUNBZ0lHRWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ04zQjRJREU0Y0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmliM0prWlhJNklIUnlZVzV6Y0dGeVpXNTBJREZ3ZUNCemIyeHBaRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURJd2NIZzdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklERTJjSGc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nVDNCbGJsTmhibk03WEc0Z0lDQWdJQ0FnSUNBZ0lDQkFhVzVqYkhWa1pTQnRkeWc0TWpBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREkwY0hnN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTWpWd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQTRjSGdnTWpkd2VEc2dmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0pqcG9iM1psY2lCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5T2lBeGNIZ2dJMlptWmlCemIyeHBaRHNnZlNCOUlIMGdmVnh1WEc1Y2JseHVYRzRpTENJdVltOTFibU41SUh0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0FnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nYzNCaFkyVXRZbVYwZDJWbGJqdGNiaUFnSUNCd1lXUmthVzVuT2lBeE56QndlRHRjYmlBZ0lDQkFhVzVqYkhWa1pTQnRkeWd4TXpZd0tTQjdYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJR0ZrWVhCMGFYWmxMWEJoWkdScGJtY29NVGN3TENBek1DazdJSDFjYmx4dVhHNGdJQ0FnSmw5ZmJHVm1kQ0I3WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUExTnlVN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jdGNtbG5hSFE2SURFMWNIZzdYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJRzEzS0RRMk1Da2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SURFd01DVTdJSDBnZlZ4dVhHNGdJQ0FnSmw5ZmRHbDBiR1VnZTF4dUlDQWdJQ0FnSUNCamIyeHZjam9nY21kaUtEVXhMQ0ExT1N3Z056QXBPeUI5WEc1Y2JpQWdJQ0FtWDE5MFpYaDBJSHRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaeTFpYjNSMGIyMDZJRFl3Y0hnN0lIMWNibHh1SUNBZ0lDWmZYMkoxZEhSdmJpQjdYRzRnSUNBZ0lDQWdJQ1k2YUc5MlpYSWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltOTRMWE5vWVdSdmR6b2dNSEI0SURCd2VDQTFjSGdnTUhCNElISm5ZbUVvTUN3Z01Dd2dNQ3dnTUM0MUtUc2dmU0I5WEc1Y2JpQWdJQ0FtWDE5eWFXZG9kQ0I3WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ0lDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc1Y2JpQWdJQ0FnSUNBZ2FXMW5JSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ2JYY29NVE0yTUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHRmtZWEIwYVhabExYZHBaSFJvS0RJeE5Td2dNVEl3S1RzZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnYlhjb05EWXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nYm05dVpUc2dmU0I5SUgwZ2ZWeHVJaXdpTG1SbGRHRnBiSE1nZTF4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpaak5tTTJZek8xeHVJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQTJNSEI0TzF4dVhHNGdJQ0FnSmw5ZmRHbDBiR1VnZTMxY2JseHVYRzRnSUNBZ0psOWZjM1ZpZEdsMGJHVWdlMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dOakJ3ZUR0Y2JpQWdJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQTBOakJ3ZUR0Y2JpQWdJQ0FnSUNBZ2JXRnlaMmx1T2lBd0lHRjFkRzg3SUgxY2JseHVJQ0FnSUNaZlgybGpiMjV6SUh0Y2JpQWdJQ0FnSUNBZ2JXRnlaMmx1T2lBd0lHRjFkRzg3WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUF5TVRCd2VEdGNiaUFnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdJQ0FnSUNBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCemNHRmpaUzFpWlhSM1pXVnVPMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dOakJ3ZURzZ2ZWeHVYRzRnSUNBZ0psOWZhV052YmlCN1hHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURVd0pUdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJemd4T0RZNFpUdGNiaUFnSUNBZ0lDQWdkMmxrZEdnNklEVXpjSGc3WEc0Z0lDQWdJQ0FnSUdobGFXZG9kRG9nTlROd2VEdGNiaUFnSUNBZ0lDQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHVJQ0FnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPaUF1TW5NN1hHNWNiaUFnSUNBZ0lDQWdKanBvYjNabGNpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBa2RIVnljVHNnZlZ4dVhHNGdJQ0FnSUNBZ0lITndZVzRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHOXdPaUExTXlVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JzWldaME9pQTFNQ1U3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaU2d0TlRBbExDQXROVEFsS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQWpabVptTzF4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF5T0hCNE95QjlJSDBnZlZ4dVhHNHVZM0psWVhScGRtVXRkR1Y0ZENCN1hHNGdJQ0FnZEdWNGRDMWhiR2xuYmpvZ2JHVm1kRHRjYmlBZ0lDQkFhVzVqYkhWa1pTQnRkell3TUNCN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklEQWdNVEFsT3lCOVhHNWNibHh1SUNBZ0lDWmZYM1JwZEd4bElIdGNiaUFnSUNBZ0lDQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVQzQmxibE5oYm5OY0lqdGNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF5TUhCNE8xeHVJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0l6TXpNenRjYmlBZ0lDQWdJQ0FnWm05dWRDMTNaV2xuYUhRNklERXdNRHRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaeTFpYjNSMGIyMDZJRE13Y0hnN0lIMWNibHh1SUNBZ0lDWmZYM2R5WVhBZ2UxeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJQ0FnSUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nT0RCd2VEdGNiaUFnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdiWGMyTURBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJqc2dmU0I5WEc1Y2JpQWdJQ0FtWDE5c1pXWjBJSHRjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaeTF5YVdkb2REb2dNVEF3Y0hnN1hHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHMTNOakF3SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJoWkdScGJtY3RjbWxuYUhRNklEQTdJSDBnZlZ4dUlDQWdJQ1pmWDNKcFoyaDBJSHQ5SUgxY2JseHVJaXdpTG1abFlYUjFjbVZrSUh0Y2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dOelZ3ZUNBd0lEQWdNRHRjYmx4dUlDQWdJQ1pmWDNScGRHeGxJSHQ5WEc1Y2JseHVJQ0FnSUNaZlgzTjFZblJwZEd4bElIdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdU9pQXdJR0YxZEc4N1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBME5TVTdYRzRnSUNBZ0lDQWdJRzFwYmkxM2FXUjBhRG9nTXpBd2NIZzdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQTFNSEI0T3lCOVhHNWNiaUFnSUNBbVgxOXBiV0ZuWlhNZ2UxeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJQ0FnSUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVJQ0FnSUNBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklITndZV05sTFdKbGRIZGxaVzQ3WEc0Z0lDQWdJQ0FnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEc0Z0lDQWdJQ0FnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmlBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsT3lCOVhHNWNiaUFnSUNBbVgxOXBiV0ZuWlNCN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBek15NDFKVHRjYmlBZ0lDQWdJQ0FnYjNabGNtWnNiM2M2SUdocFpHUmxianRjYmlBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJQ0FnSUNCb1pXbG5hSFE2SURNeE5YQjRPMXh1SUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1T2lBdU5ITTdYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJRzEzS0RFMk5UTXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ01qZ3djSGc3SUgxY2JpQWdJQ0FnSUNBZ1FHbHVZMngxWkdVZ2JYY29NVFEyTUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF5TkRCd2VEc2dmVnh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J0ZHlneE1EVTFLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERTRNSEI0T3lCOVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHMTNLRGM1TUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF4TXpCd2VEc2dmVnh1WEc0Z0lDQWdJQ0FnSUdsdFp5QjdYRzRnSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVRJd0pUdGNiaUFnSUNBZ0lDQWdJQ0FnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iR1Y0T2lBeE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnYlhjb05UWTNLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF4TlRBbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lCaGRYUnZPeUI5SUgxY2JseHVJQ0FnSUNBZ0lDQW1PbUZtZEdWeUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuUmxiblE2SUZ3aVhDSTdYRzRnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSdmNEb2dNRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGxablE2SURBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEExSlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dNVEF3SlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSEpuWW1Fb01Dd3dMREFzTUM0M0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSeVlXNXphWFJwYjI0NklDNHpjenNnZlZ4dVhHNGdJQ0FnSUNBZ0lDWTZhRzkyWlhJNk9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV1NndE1UQXdKU2s3SUgxY2JpQWdJQ0FnSUNBZ0pqcG9iM1psY2lBdVptVmhkSFZ5WldSZlgybHRZV2RsZEdWNGRDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGIzQTZJREV3SlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtPeUI5SUgxY2JseHVYRzRnSUNBZ0psOWZhVzFoWjJWMFpYaDBJSHRjYmlBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJQ0FnSUNCMGIzQTZJRFV3SlR0Y2JpQWdJQ0FnSUNBZ2JHVm1kRG9nTlRBbE8xeHVJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaU2d0TlRBbExDQXROVEFsS1R0Y2JpQWdJQ0FnSUNBZ1kyOXNiM0k2SUNObVptWm1abVk3WEc0Z0lDQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQW5VMjkxY21ObFUyRnVjMUJ5YnljN1hHNGdJQ0FnSUNBZ0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHRmtZWEIwYVhabExXWnZiblFvTWpBc0lERTFLVHRjYmlBZ0lDQWdJQ0FnZWkxcGJtUmxlRG9nTVRBeE1EdGNiaUFnSUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SURFd01EdGNiaUFnSUNBZ0lDQWdkSEpoYm5OcGRHbHZiam9nTGpSek95QjlYRzVjYmlBZ0lDQW1YMTltYjI5MFpYSWdlMXh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT2lCMWNtd29KeTR1TDJsdFp5OW1aV0YwZFhKbFpDOW1iMjkwWlhJdWNHNW5KeWs3WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdGMybDZaVG9nWTI5MlpYSTdYRzVjYmlBZ0lDQWdJQ0FnTG5keVlYQndaWElnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmp0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lDQWdJQ0FnSUNBZ0lDQkFhVzVqYkhWa1pTQmhaR0Z3ZEdsMlpTMXdZV1JrYVc1bktETXdMQ0F4TUNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0JoWkdGd2RHbDJaUzFvWldsbmFIUW9NVEU0TENBNU1DazdYRzRnSUNBZ0lDQWdJQ0FnSUNCb05DQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklDTm1abVptWm1ZN0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUdFZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnZjbVJsY2kxamIyeHZjam9nSTJabVptWm1aanRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dJMlptWm1abVpqc2dmU0I5SUgxY2JpQWdJQ0FtWDE5aWRYUjBiMjQ2YUc5MlpYSWdlMXh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJ5WjJKaEtESTFOU3dnTWpVMUxDQXlOVFVzSURBdU15azdYRzRnSUNBZ0lDQWdJR052Ykc5eU9pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ0lDQWdJQ0FnZEhKaGJuTnBkR2x2YmpvZ0xqSnpPeUI5SUgxY2JseHVYRzVjYmx4dVhHNWNibHh1WEc1Y2JseHVYRzVjYmx4dVhHNWNiaUlzSWk1elpYSjJhV05sY3lCN1hHNGdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4dUlDQWdJSEJoWkdScGJtYzZJRGd3Y0hnZ01DQXdJREE3WEc1Y2JseHVJQ0FnSUNaZlgzUnBkR3hsSUh0OVhHNWNibHh1SUNBZ0lDWmZYM04xWW5ScGRHeGxJSHQ5SUgxY2JseHVYRzR1WW14dlkyc3RkR2wwYkdVZ2UzMWNibHh1TG1Kc2IyTnJMWFJsZUhRZ2UzMWNibHh1SWwxOSAqL1xuIiwiXHJcbi8qIExhcmdlIGRlc2t0b3BzIGFuZCBsYXB0b3BzICovXHJcbkBtaXhpbiBtdzExODAge1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDExODBweCl7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qIFNwZWNpYWwgc2l6ZSBmb3IgZ2FsbGVyeSAqL1xyXG5AbWl4aW4gbXcxMDMwIHtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDMwcHgpe1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG4vKiBMYW5kc2NhcGUgdGFibGV0cyBhbmQgbWVkaXVtIGRlc2t0b3BzICovXHJcbkBtaXhpbiBtdzk3OSB7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogOTc5cHgpe1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG4vKiBQb3J0cmFpdCB0YWJsZXRzIGFuZCBzbWFsbCBkZXNrdG9wcyAqL1xyXG5AbWl4aW4gbXc3Njgge1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KXtcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG4vKiBMYW5kc2NhcGUgcGhvbmVzIGFuZCBwb3J0cmFpdCB0YWJsZXRzICovXHJcbkBtaXhpbiBtdzYwMCB7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpe1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG4vKiBQb3J0cmFpdCBwaG9uZXMgYW5kIHNtYWxsZXIgKi9cclxuQG1peGluIG13NDgwIHtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCl7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qIElwaG9uZSA1ICovXHJcbkBtaXhpbiBtdzMyMCB7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMzIwcHgpe1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG4vKiBNdWx0eXB1cnBvc2UgbWF4LXdpZHRoIG1peGluICovXHJcbkBtaXhpbiBtdygkd2lkdGgpIHtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkd2lkdGggKyAncHgnKSB7XHJcbiAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG4vKiBNdWx0eXB1cnBvc2UgbWluLXdpZHRoIG1peGluICovXHJcbkBtaXhpbiBtaW53KCR3aWR0aCkge1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICR3aWR0aCArICdweCcpIHtcclxuICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4vKiBSZXNwb25zaXZlIHBhcmFtZXRycyAqL1xyXG5cclxuJG1heFdpZHRoOiAxMzYwO1xyXG5cclxuQG1peGluIGFkYXB0aXZlLWZvbnQoJHBjU2l6ZSwgJG1vYlNpemUpIHtcclxuICAgICRhZGRTaXplOiAkcGNTaXplIC0gJG1vYlNpemU7XHJcbiAgICAkbWF4V2lkdGg6ICRtYXhXaWR0aCAtIDMyMDtcclxuICAgIGZvbnQtc2l6ZTogY2FsYygjeyRtb2JTaXplICsgcHh9ICsgI3skYWRkU2l6ZX0gKiAoKDEwMHZ3IC0gMzIwcHgpIC8gI3skbWF4V2lkdGh9KSk7XHJcbn1cclxuXHJcbkBtaXhpbiBhZGFwdGl2ZS1wYWRkaW5nKCRwY1NpemUsICRtb2JTaXplKSB7XHJcbiAgICAkYWRkU2l6ZTogJHBjU2l6ZSAtICRtb2JTaXplO1xyXG4gICAgJG1heFdpZHRoOiAkbWF4V2lkdGggLSAzMjA7XHJcbiAgICBwYWRkaW5nOiBjYWxjKCN7JG1vYlNpemUgKyBweH0gKyAjeyRhZGRTaXplfSAqICgoMTAwdncgLSAzMjBweCkgLyAjeyRtYXhXaWR0aH0pKTtcclxufVxyXG5cclxuQG1peGluIGFkYXB0aXZlLXdpZHRoKCRwY1NpemUsICRtb2JTaXplKSB7XHJcbiAgICAkYWRkU2l6ZTogJHBjU2l6ZSAtICRtb2JTaXplO1xyXG4gICAgJG1heFdpZHRoOiAkbWF4V2lkdGggLSAzMjA7XHJcbiAgICB3aWR0aDogY2FsYygjeyRtb2JTaXplICsgcHh9ICsgI3skYWRkU2l6ZX0gKiAoKDEwMHZ3IC0gMzIwcHgpIC8gI3skbWF4V2lkdGh9KSk7XHJcbn1cclxuXHJcbkBtaXhpbiBhZGFwdGl2ZS1oZWlnaHQoJHBjU2l6ZSwgJG1vYlNpemUpIHtcclxuXHJcbiAgICAkYWRkU2l6ZTogJHBjU2l6ZSAtICRtb2JTaXplO1xyXG4gICAgJG1heFdpZHRoOiAkbWF4V2lkdGggLSAzMjA7XHJcbiAgICBoZWlnaHQ6IGNhbGMoI3skbW9iU2l6ZSArIHB4fSArICN7JGFkZFNpemV9ICogKCgxMDB2dyAtIDMyMHB4KSAvICN7JG1heFdpZHRofSkpO1xyXG59XHJcblxyXG4iLCIqIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDtcbiAgICBib3JkZXI6IDA7IH1cblxuKiwgKjpiZWZvcmUsICo6YWZ0ZXIge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuKjpmb2N1cywgKjphY3RpdmUge1xuICAgIG91dGxpbmU6IG5vbmU7IH1cblxuXG4uY29udGFpbmVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBtaW4td2lkdGg6IDI1MHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxudWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7IH1cblxuYSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIHRyYW5zaXRpb246IC4yczsgfVxuXG5oMSwgaDIsIGgzLCBoNCB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7IH1cblxuLndyYXBwZXIge1xuICAgIG1heC13aWR0aDogMTE1MHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmc6IDAgMTVweCAwOyB9XG5cblxuXG4iLCJcbiAgICAvKiAtLS0tLSBCdXJnZXIgbWVudSBjbGFzcywgY2xvc2VkIG1lbnUgY2xhc3MgYW5kIGJhY2tncm91bmQgZm9yIG1vYmlsZSAtLS0tLS0gKi9cbi5idXJnZXItbWVudSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIHRyYW5zaXRpb246IC4zcztcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDBweDtcbiAgICB6LWluZGV4OiAxMDAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgIEBpbmNsdWRlIG13KDgyMCkge1xuICAgICAgICBkaXNwbGF5OiBibG9jazsgfVxuXG4gICAgc3BhbiB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDJweDtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgICB0b3A6IDEzcHg7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIGJyZWFrLXJhZGl1czogMnB4OyB9XG4gICAgJjphZnRlciwgJjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAycHg7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgdHJhbnNpdGlvbjogLjNzO1xuICAgICAgICBicmVhay1yYWRpdXM6IDJweDsgfVxuICAgICY6YmVmb3JlIHtcbiAgICAgICAgdG9wOiAwcHg7IH1cbiAgICAmOmFmdGVyIHtcbiAgICAgICAgYm90dG9tOiAwcHg7IH0gfVxuLmNsb3NlIHtcbiAgICBzcGFuIHtcbiAgICAgICAgb3BhY2l0eTogMDsgfVxuXG4gICAgJjpiZWZvcmUge1xuICAgICAgICB0b3A6IDlweDtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMjI1ZGVnKTsgfVxuICAgICY6YWZ0ZXIge1xuICAgICAgICBib3R0b206IDE5cHg7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC0yMjVkZWcpOyB9IH1cblxuXG4uYmctbW9iaWxlIHtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgLjkpO1xuICAgIHotaW5kZXg6IC0xO1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb246IC41cztcbiAgICBvdmVyZmxvdzogYTsgfVxuXG5cbi5iZ2FjdGl2ZSB7XG4gICAgQGluY2x1ZGUgbXcoODIwKSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICB6LWluZGV4OiA5OTk7XG4gICAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7IH0gfVxuXG4vKiAtLS0tLSBlbmQgbW9iaWxlIGJsb2NrIC0tLS0tICovXG5cbi8qIC0tLS0gSGVhZGVyIHJvdW5kIGRvd24gYnV0dG9uIC0tLS0tICovXG5cbi5kb3duLWJ1dHRvbiB7XG4gICAgd2lkdGg6IDM2cHg7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdHVycTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiA2dmg7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDApO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0cmFuc2l0aW9uOiAuM3M7XG4gICAgYm94LXNoYWRvdzogOHB4IDhweCA4cHggLTExcHggcmdiYSgwLDAsMCwwLjc1KTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAmOmhvdmVyIHtcbiAgICAgICAgYm90dG9tOiA2LjZ2aDtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsMjU1LDI1NSwwLjUpOyB9XG5cbiAgICAmX19hcnJvdyB7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgaGVpZ2h0OiA3cHg7XG4gICAgICAgIHdpZHRoOiA3cHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgdG9wOiA0NiU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSg0NWRlZyk7XG4gICAgICAgIGJvcmRlci10b3A6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItbGVmdDogdHJhbnNwYXJlbnQ7IH0gfVxuXG4vKiAtLS0tLSBlbmQgZG93biBidXR0b24gLS0tLS0qL1xuXG5cbi8qIC0tLS0tIEJsb2NrIHRpdGxlIGFuZCB0ZXh0IGV4dGVuc2lvbiAtLS0tLSAqL1xuXG4uYmxvY2stdGl0bGUge1xuICAgIGZvbnQtZmFtaWx5OiBTb3VyY2VTYW5zUHJvO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgbGluZS1oZWlnaHQ6IDI7XG4gICAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgICBsZXR0ZXItc3BhY2luZzogNHB4O1xuICAgIGNvbG9yOiByZ2IoNTEsIDU5LCA3MCk7XG4gICAgQGluY2x1ZGUgYWRhcHRpdmUtZm9udCgyMCwgMTYpO1xuICAgIHBhZGRpbmctYm90dG9tOiAyNXB4OyB9XG5cbi5ibG9jay10ZXh0IHtcbiAgICBmb250LWZhbWlseTogXCJPcGVuU2Fuc1wiO1xuICAgIGNvbG9yOiByZ2IoMTI5LCAxMzQsIDE0Mik7XG4gICAgbGluZS1oZWlnaHQ6IDEuNzg2O1xuICAgIEBpbmNsdWRlIGFkYXB0aXZlLWZvbnQoMTQsIDExKTsgfVxuXG4vKiAtLS0tLSBlbmQgLS0tLS0gKi9cblxuXG4vKiAtLS0tLSBCdXR0b24gLS0tLS0gKi9cblxuLmJ0biB7XG4gICAgQGluY2x1ZGUgYWRhcHRpdmUtZm9udCgxNiwgMTApO1xuICAgIGZvbnQtZmFtaWx5OiBcIk9wZW5TYW5zXCI7XG4gICAgY29sb3I6IHJnYig1MSwgNTksIDcwKTtcbiAgICBsaW5lLWhlaWdodDogNDBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDtcbiAgICB3aWR0aDogMTQwcHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRyYW5zaXRpb246IC4xcztcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKiAtLS0tLSBlbmQgLS0tLS0gKi9cblxuLyogLS0tLS0gVGV4dCBmb3JtYXRpbmcgLS0tLS0gKi9cblxuLmJvbGQge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi50dXJxIHtcbiAgICBjb2xvcjogJHR1cnE7IH1cblxuLnR1cnEtYiB7XG4gICAgQGV4dGVuZCAuYm9sZDtcbiAgICBjb2xvcjogJHR1cnE7IH1cblxuXG5cblxuXG4iLCJoZWFkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIHdpZHRoOiAxMDB2dztcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4uaGVhZGVyIHtcbiAgICAmX19iZyB7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB6LWluZGV4OiAtMjtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7IH1cblxuXG4gICAgJl9fdG9wIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBwYWRkaW5nLXRvcDogMzhweDsgfVxuXG5cbiAgICAmX19oZWFkZXItdGl0bGUge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgIG1heC13aWR0aDogNjAwcHg7XG5cbiAgICAgICAgLmJsb2NrLXRpdGxlIHtcbiAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDdweDtcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxNXB4O1xuICAgICAgICAgICAgQGluY2x1ZGUgYWRhcHRpdmUtZm9udCgzNSwgMjYpOyB9XG5cbiAgICAgICAgLmhlYWRlci1zdWJ0aXRsZSB7XG4gICAgICAgICAgICBmb250LWZhbWlseTogT3BlblNhbnM7XG4gICAgICAgICAgICBAaW5jbHVkZSBhZGFwdGl2ZS1mb250KDE2LCAxMik7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS43NTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAxMDA7IH0gfSB9XG5cbi5iZy1mb24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsLjMpO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogLTE7IH1cblxuXG5cblxuLnRvcC1tZW51IHtcblxuXG4gICAgJl9fbG9nbyB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBCaWdKb2huO1xuICAgICAgICBmb250LXNpemU6IDI1cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAwLjQ4O1xuICAgICAgICB6LWluZGV4OiAxMDAwOyB9XG5cblxuICAgICZfX25hdiB7XG4gICAgICAgIEBpbmNsdWRlIG13KDgyMCkge1xuXG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDMwcHgpO1xuICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAgICAgICAgIHotaW5kZXg6IDEwMDA7XG4gICAgICAgICAgICBvdmVyZmxvdzogc2Nyb2xsOyB9IH1cblxuXG4gICAgLm1vYmlsZS1hY3RpdmUge1xuICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgICAgIHRyYW5zaXRpb246IC4zczsgfVxuXG5cblxuICAgICZfX2xpc3Qge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgQGluY2x1ZGUgbXcoODIwKSB7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgcGFkZGluZzogMTB2aCAwIDV2aCAwOyB9IH1cblxuXG5cblxuICAgICZfX2l0ZW0ge1xuICAgICAgICBtYXJnaW46IDAgMCAwIDJweDtcbiAgICAgICAgQGluY2x1ZGUgbXcoODIwKSB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA3dmg7IH1cbiAgICAgICAgYSB7XG4gICAgICAgICAgICBwYWRkaW5nOiA3cHggMThweDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGJvcmRlcjogdHJhbnNwYXJlbnQgMXB4IHNvbGlkO1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBPcGVuU2FucztcbiAgICAgICAgICAgIEBpbmNsdWRlIG13KDgyMCkge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAyNXB4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDhweCAyN3B4OyB9XG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCAjZmZmIHNvbGlkOyB9IH0gfSB9XG5cblxuXG5cbiIsIi5ib3VuY3kge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHBhZGRpbmc6IDE3MHB4O1xuICAgIEBpbmNsdWRlIG13KDEzNjApIHtcbiAgICAgICAgQGluY2x1ZGUgYWRhcHRpdmUtcGFkZGluZygxNzAsIDMwKTsgfVxuXG5cbiAgICAmX19sZWZ0IHtcbiAgICAgICAgd2lkdGg6IDU3JTtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTVweDtcbiAgICAgICAgQGluY2x1ZGUgbXcoNDYwKSB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbiAgICAmX190aXRsZSB7XG4gICAgICAgIGNvbG9yOiByZ2IoNTEsIDU5LCA3MCk7IH1cblxuICAgICZfX3RleHQge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNjBweDsgfVxuXG4gICAgJl9fYnV0dG9uIHtcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDVweCAwcHggcmdiYSgwLCAwLCAwLCAwLjUpOyB9IH1cblxuICAgICZfX3JpZ2h0IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBAaW5jbHVkZSBtdygxMzYwKSB7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgYWRhcHRpdmUtd2lkdGgoMjE1LCAxMjApOyB9XG4gICAgICAgICAgICBAaW5jbHVkZSBtdyg0NjApIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lOyB9IH0gfSB9XG4iLCIuZGV0YWlscyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmM2YzZjM7XG4gICAgcGFkZGluZy10b3A6IDYwcHg7XG5cbiAgICAmX190aXRsZSB7fVxuXG5cbiAgICAmX19zdWJ0aXRsZSB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA2MHB4O1xuICAgICAgICBtYXgtd2lkdGg6IDQ2MHB4O1xuICAgICAgICBtYXJnaW46IDAgYXV0bzsgfVxuXG4gICAgJl9faWNvbnMge1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgd2lkdGg6IDIxMHB4O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA2MHB4OyB9XG5cbiAgICAmX19pY29uIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODE4NjhlO1xuICAgICAgICB3aWR0aDogNTNweDtcbiAgICAgICAgaGVpZ2h0OiA1M3B4O1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIHRyYW5zaXRpb246IC4ycztcblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR0dXJxOyB9XG5cbiAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUzJTtcbiAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICBmb250LXNpemU6IDI4cHg7IH0gfSB9XG5cbi5jcmVhdGl2ZS10ZXh0IHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIEBpbmNsdWRlIG13NjAwIHtcbiAgICAgICAgcGFkZGluZzogMCAxMCU7IH1cblxuXG4gICAgJl9fdGl0bGUge1xuICAgICAgICBmb250LWZhbWlseTogXCJPcGVuU2Fuc1wiO1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgICBmb250LXdlaWdodDogMTAwO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMzBweDsgfVxuXG4gICAgJl9fd3JhcCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA4MHB4O1xuICAgICAgICBAaW5jbHVkZSBtdzYwMCB7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9IH1cblxuICAgICZfX2xlZnQge1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMDBweDtcbiAgICAgICAgQGluY2x1ZGUgbXc2MDAge1xuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMDsgfSB9XG4gICAgJl9fcmlnaHQge30gfVxuXG4iLCIuZmVhdHVyZWQge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiA3NXB4IDAgMCAwO1xuXG4gICAgJl9fdGl0bGUge31cblxuXG4gICAgJl9fc3VidGl0bGUge1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgd2lkdGg6IDQ1JTtcbiAgICAgICAgbWluLXdpZHRoOiAzMDBweDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDUwcHg7IH1cblxuICAgICZfX2ltYWdlcyB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuICAgICZfX2ltYWdlIHtcbiAgICAgICAgd2lkdGg6IDMzLjUlO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGhlaWdodDogMzE1cHg7XG4gICAgICAgIHRyYW5zaXRpb246IC40cztcbiAgICAgICAgQGluY2x1ZGUgbXcoMTY1Mykge1xuICAgICAgICAgICAgaGVpZ2h0OiAyODBweDsgfVxuICAgICAgICBAaW5jbHVkZSBtdygxNDYwKSB7XG4gICAgICAgICAgICBoZWlnaHQ6IDI0MHB4OyB9XG4gICAgICAgIEBpbmNsdWRlIG13KDEwNTUpIHtcbiAgICAgICAgICAgIGhlaWdodDogMTgwcHg7IH1cbiAgICAgICAgQGluY2x1ZGUgbXcoNzkwKSB7XG4gICAgICAgICAgICBoZWlnaHQ6IDEzMHB4OyB9XG5cbiAgICAgICAgaW1nIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMjAlO1xuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICAgIGZsZXg6IDE7XG4gICAgICAgICAgICBAaW5jbHVkZSBtdyg1NjcpIHtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDE1MCU7XG4gICAgICAgICAgICAgICAgd2lkdGg6IGF1dG87IH0gfVxuXG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDUlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjcpO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogLjNzOyB9XG5cbiAgICAgICAgJjpob3Zlcjo6YWZ0ZXIge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTsgfVxuICAgICAgICAmOmhvdmVyIC5mZWF0dXJlZF9faW1hZ2V0ZXh0IHtcbiAgICAgICAgICAgIHRvcDogMTAlO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH0gfVxuXG5cbiAgICAmX19pbWFnZXRleHQge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdTb3VyY2VTYW5zUHJvJztcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgQGluY2x1ZGUgYWRhcHRpdmUtZm9udCgyMCwgMTUpO1xuICAgICAgICB6LWluZGV4OiAxMDEwO1xuICAgICAgICBmb250LXdlaWdodDogMTAwO1xuICAgICAgICB0cmFuc2l0aW9uOiAuNHM7IH1cblxuICAgICZfX2Zvb3RlciB7XG4gICAgICAgIGJhY2tncm91bmQ6IHVybCgnLi4vaW1nL2ZlYXR1cmVkL2Zvb3Rlci5wbmcnKTtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcblxuICAgICAgICAud3JhcHBlciB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIEBpbmNsdWRlIGFkYXB0aXZlLXBhZGRpbmcoMzAsIDEwKTtcbiAgICAgICAgICAgIEBpbmNsdWRlIGFkYXB0aXZlLWhlaWdodCgxMTgsIDkwKTtcbiAgICAgICAgICAgIGg0IHtcbiAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZmZmZjsgfVxuICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmZmZmO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmZmZmOyB9IH0gfVxuICAgICZfX2J1dHRvbjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTtcbiAgICAgICAgY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICB0cmFuc2l0aW9uOiAuMnM7IH0gfVxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuIiwiLnNlcnZpY2VzIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogODBweCAwIDAgMDtcblxuXG4gICAgJl9fdGl0bGUge31cblxuXG4gICAgJl9fc3VidGl0bGUge30gfVxuXG5cbi5ibG9jay10aXRsZSB7fVxuXG4uYmxvY2stdGV4dCB7fVxuXG4iXX0= */
