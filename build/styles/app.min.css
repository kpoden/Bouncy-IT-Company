@font-face{font-family:'BigJohn';src:url(../fonts/BIGJOHN.otf)}@font-face{font-family:'OpenSans';src:url(../fonts/OpenSans-Regular.ttf)}@font-face{font-family:'SourceSansPro';src:url(../fonts/SourceSansPro-Regular.ttf)}@font-face{font-family:'SourceSansPro';src:url(../fonts/SourceSansPro-Light.ttf);font-weight:100;font-style:normal}@font-face{font-family:'Roboto';src:url(../fonts/Roboto-Regular.ttf)}@font-face{font-family:'MyriadPro';src:url(../fonts/MyriadPro-Regular.ttf)}*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}:active,:focus{outline:0}.container{width:100%;height:100%;margin:0 auto;overflow:hidden;min-width:250px;position:relative}ul{list-style:none}.slick-dots li,a{-webkit-transition:.2s;transition:.2s}a{text-decoration:none;color:inherit}h1,h2,h3,h4,ul{margin:0;padding:0}.wrapper{max-width:1150px;margin:0 auto;padding:0 15px}.burger-menu{display:none;position:relative;width:40px;height:30px;-webkit-transition:.3s;transition:.3s;top:0;right:0;z-index:1000;cursor:pointer}@media (max-width:820px){.burger-menu{display:block}}.burger-menu span,.burger-menu:after,.burger-menu:before{width:100%;height:2px;position:absolute;background-color:#fff;break-radius:2px}.burger-menu span{top:13px;opacity:1}.burger-menu:after,.burger-menu:before{content:"";-webkit-transition:.3s;transition:.3s}.burger-menu:before{top:0}.burger-menu:after{bottom:0}.close span{opacity:0}.close:before{top:9px;-webkit-transform:rotate(225deg);transform:rotate(225deg)}.close:after{bottom:19px;-webkit-transform:rotate(-225deg);transform:rotate(-225deg)}.bg-mobile{top:0;left:0;position:fixed;width:100%;height:100%;background-color:rgba(0,0,0,.9);z-index:-1;visibility:hidden;opacity:0;-webkit-transition:.5s;transition:.5s;overflow:a}@media (max-width:820px){.bgactive{display:block;opacity:1;z-index:999;visibility:visible}}.down-button{width:36px;height:36px;border-radius:50%;background-color:#19bd9a;position:absolute;bottom:6vh;left:50%;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);margin:0 auto;cursor:pointer;-webkit-transition:.3s;transition:.3s;-webkit-box-shadow:8px 8px 8px -11px rgba(0,0,0,.75);box-shadow:8px 8px 8px -11px rgba(0,0,0,.75);border:1px solid transparent}.down-button:hover{bottom:6.6vh;border:1px solid rgba(255,255,255,.5)}.down-button__arrow{content:'';display:block;height:7px;width:7px;background-color:transparent;border:1px solid #fff;position:absolute;left:50%;top:46%;-webkit-transform:translate(-50%,-50%) rotate(45deg);transform:translate(-50%,-50%) rotate(45deg);border-top:transparent;border-left:transparent}.block-title{font-family:SourceSansPro;text-transform:uppercase;line-height:2;font-weight:100;letter-spacing:4px;color:#333b46;font-size:calc(16px + 4*((100vw - 320px)/1040));padding-bottom:25px}.block-text,.btn{font-family:"OpenSans"}.block-text{font-size:calc(11px + 3*((100vw - 320px)/1040));color:#81868e;line-height:1.786}.btn{font-size:14px;color:#333b46;line-height:40px;text-align:center;border:1px solid #000;width:140px;height:40px;border-radius:20px;cursor:pointer;-webkit-transition:.2s;transition:.2s;display:block}.icon{background-color:#81868e}.icon,.icon--bg-black,.icon--bg-grey{display:block;position:relative;border-radius:50%;width:53px;height:53px;cursor:pointer;-webkit-transition:.2s;transition:.2s}.icon--bg-grey{background-color:#81868e}.icon--bg-black:hover,.icon--bg-grey:hover,.slick-dots li.slick-active,.slick-dots li:hover{background-color:#19bd9a}.icon--bg-black{background-color:#000;opacity:.8}.icon--bg-black:hover{opacity:1}.icon span,.icon--bg-black span,.icon--bg-grey span{position:absolute;top:53%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);color:#fff;font-size:28px}.bold,.turq-b{font-weight:700}.turq,.turq-b{color:#19bd9a}.slick-dots{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;font-size:0;margin:60px auto 0;width:70px}.slick-dots li{display:block;width:10px;height:10px;border-radius:50%;border:1px solid #19bd9a;cursor:pointer}.slick-dots li button{display:none}header{position:relative;height:100vh;width:100vw;overflow:hidden}.header__bg{height:100%;width:100%;position:absolute;top:0;left:0;z-index:-2;-o-object-fit:cover;object-fit:cover}.header__top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding-top:38px}.header__header-title{text-align:center;position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);max-width:600px}.header__header-title .block-title{color:#fff;letter-spacing:7px;padding-bottom:15px;font-size:calc(26px + 9*((100vw - 320px)/1040))}.header__header-title .header-subtitle{font-family:OpenSans;font-size:calc(12px + 4*((100vw - 320px)/1040));line-height:1.75;font-weight:100}.bg-fon{background-color:rgba(0,0,0,.3);height:100%;position:absolute;width:100%;top:0;left:0;z-index:-1}.top-menu__logo{font-family:BigJohn;font-size:25px;line-height:.48;z-index:1000}@media (max-width:820px){.top-menu__nav{opacity:0;visibility:hidden;-webkit-transform:translateY(30px);transform:translateY(30px);position:fixed;top:0;left:0;width:100%;height:100vh;z-index:1000;overflow:scroll}}.top-menu .mobile-active{visibility:visible;opacity:1;-webkit-transform:translateY(0);transform:translateY(0);-webkit-transition:.3s;transition:.3s}.top-menu__list{display:-webkit-box;display:-ms-flexbox;display:flex;width:auto}@media (max-width:820px){.top-menu__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:10vh 0 5vh}}.top-menu__item{margin:0 0 0 2px}@media (max-width:820px){.top-menu__item{margin-bottom:7vh}}.top-menu__item a{padding:7px 18px;text-align:center;border:transparent 1px solid;border-radius:20px;font-size:16px;font-family:OpenSans}@media (max-width:820px){.top-menu__item a{font-size:24px;border-radius:25px;padding:8px 27px}}.top-menu__item a:hover{border:1px #fff solid}.bouncy{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:170px}@media (max-width:1360px){.bouncy{padding:calc(30px + 140*((100vw - 320px)/1040))}}.bouncy__left{width:57%;padding-right:15px}@media (max-width:460px){.bouncy__left{width:100%}}.bouncy__title{color:#333b46}.bouncy__text{padding-bottom:60px}.bouncy__button:hover{-webkit-box-shadow:0 0 5px 0 rgba(0,0,0,.5);box-shadow:0 0 5px 0 rgba(0,0,0,.5)}.bouncy__right,.featured__footer .wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.bouncy__right img{width:100%}@media (max-width:1360px){.bouncy__right img{width:calc(120px + 95*((100vw - 320px)/1040))}}@media (max-width:460px){.bouncy__right img{display:none}}.details{text-align:center;background-color:#f3f3f3;padding-top:60px}.details__subtitle{padding-bottom:60px;max-width:460px;margin:0 auto}.details__icons{margin:0 auto;width:210px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding-bottom:60px}.creative-text{text-align:left}@media (max-width:600px){.creative-text{padding:0 10%}}.creative-text__title{font-family:"OpenSans";font-size:20px;color:#333;font-weight:100;padding-bottom:30px}.creative-text__wrap{display:-webkit-box;display:-ms-flexbox;display:flex;padding-bottom:80px}@media (max-width:600px){.creative-text__wrap{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.creative-text__left{padding-right:100px}@media (max-width:600px){.creative-text__left{padding-right:0}}.featured{text-align:center;padding:75px 0 0}.featured__subtitle{margin:0 auto;width:45%;min-width:300px;padding-bottom:50px}.featured__images{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;overflow:hidden;cursor:pointer;position:relative}.featured__image{width:33.5%;overflow:hidden;position:relative;height:315px;-webkit-transition:.4s;transition:.4s}@media (max-width:1653px){.featured__image{height:280px}}@media (max-width:1460px){.featured__image{height:240px}}@media (max-width:1055px){.featured__image{height:180px}}@media (max-width:790px){.featured__image{height:130px}}.featured__image img{width:120%;overflow:hidden;-webkit-box-flex:1;-ms-flex:1;flex:1}@media (max-width:567px){.featured__image img{height:150%;width:auto}}.featured__image:after{content:"";display:block;position:absolute;top:0;left:0;width:105%;height:100%;background-color:rgba(0,0,0,.7);-webkit-transition:.3s;transition:.3s}.featured__image:hover::after{-webkit-transform:translateY(-100%);transform:translateY(-100%)}.featured__image:hover .featured__imagetext{top:10%;font-weight:700}.featured__imagetext{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);color:#fff;font-family:'SourceSansPro';text-transform:uppercase;font-size:calc(15px + 5*((100vw - 320px)/1040));z-index:1010;font-weight:100;-webkit-transition:.4s;transition:.4s}.featured__footer{background:url(../img/featured/footer.png);background-size:cover}.featured__footer .wrapper{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:calc(10px + 20*((100vw - 320px)/1040));height:calc(90px + 28*((100vw - 320px)/1040))}.featured__footer .wrapper h4,header{color:#fff}.featured__button{border-color:#fff;color:#fff;-webkit-transition:.2s;transition:.2s}.featured__button:hover{background-color:#fff;color:#19bd9a}.services{text-align:center;padding:80px 0}@media (max-width:1200px){.services{padding:calc(15px + 15*((100vw - 320px)/1040))}}.services__icons,.services__main{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.services__main{-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:50px 0 0;font-family:OpenSans}.services__icons{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.services__icon{margin-bottom:12px}.services__texts{padding:calc(15px + 7*((100vw - 320px)/1040));text-align:left;color:#333;width:calc(250px + 150*((100vw - 320px)/1040));font-size:calc(13px + 3*((100vw - 320px)/1040));min-width:150px}.services__texts h4{font-weight:100;padding:0 0 33px}@media (max-width:979px){.services__texts h4{padding:0 0 20px}}.services__texts p{padding:0 0 33px}@media (max-width:979px){.services__texts p{padding:0 0 20px}}.services__charts{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media (max-width:768px){.services__charts{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:calc(10px + 60*((100vw - 320px)/1040))}}.chart-box{position:relative}.chart{-webkit-transform:scaleX(-1);transform:scaleX(-1);padding:calc(2px + 18*((100vw - 320px)/1040))}.chart-name{font-size:calc(10px + 6*((100vw - 320px)/1040));color:#999;padding-bottom:10px}.chart-percent{position:absolute;top:40%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);font-size:calc(18px + 7*((100vw - 320px)/1040));color:#333}.impressed{background:url(../img/impressed/impressed-bg.png);background-size:cover}.impressed__left,.impressed__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.impressed__wrapper{max-width:1170px;margin:0 auto;padding:0 20px 100px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.impressed__left{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:end;width:50%;padding-top:30px}@media (max-width:600px){.impressed__left{width:70%;margin:0 auto}}.impressed__title{color:#fff}.impressed__sign{padding-top:20px}.impressed__right{position:relative}@media (max-width:600px){.impressed__right{display:none}}.impressed__monitor{margin-top:-35px;width:100%}.impressed__bouncy{font-family:'BigJohn';font-size:30px;font-weight:700;position:absolute;top:calc(50% - 40px);left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);color:#fff}.portfolio{background:#f3f3f3;padding-bottom:100px}.portfolio__wrap{text-align:center;margin:0 auto;padding:70px 0 0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;max-width:1122px}.portfolio__title{color:#333}.portfolio__subtitle{max-width:480px;color:#999}.portfolio__list{padding:80px 0 0;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:calc(270px + 313*((100vw - 320px)/1040))}.portfolio__list-item{color:#333;font-size:calc(12px + 4*((100vw - 320px)/1040));font-family:OpenSans;cursor:pointer;position:relative}.portfolio__list-item:after{content:'';display:block;position:absolute;bottom:-20px;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);width:0;height:2px;background:#19bd9a;-webkit-transition:.2s;transition:.2s}.portfolio__list-item:hover::after{width:75%}.portfolio__gallery{padding:60px 0 40px}.gallery,.gallery .galhover,.gallery__group{display:-webkit-box;display:-ms-flexbox;display:flex}.gallery{width:100%}.gallery .galhover,.gallery__group{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media (max-width:600px){.gallery__group{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.gallery__col{width:50%;-webkit-transition:.2s;transition:.2s;padding:0 5px}@media (max-width:600px){.gallery__col{width:100%}}.gallery__item{width:100%;cursor:pointer;position:relative;overflow:hidden;margin:6px auto}.gallery__item::after,.team__position:after{display:block;content:"";position:absolute;top:0}.gallery__item::after{left:0;background-color:rgba(0,0,0,.8);-webkit-transform:translateY(-101%);transform:translateY(-101%);-webkit-transition:.2s;transition:.2s;width:100%;height:99%}.gallery__item:hover::after{-webkit-transform:translateY(0);transform:translateY(0)}.gallery__item:hover .galhover__wrap{visibility:visible;opacity:1}.gallery__item:hover .galhover__title:after{width:25px}.gallery__image{width:100%}.gallery .galhover{position:absolute;top:0;left:0;z-index:2000;text-align:left;width:100%;height:100%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.gallery .galhover__wrap{width:70%;opacity:0;visibility:hidden;-webkit-transition:.3s;transition:.3s}.gallery .galhover__title{text-transform:uppercase;font-family:SourceSansPro;font-size:calc(15px + 5*((100vw - 320px)/1040));text-align:left;margin-bottom:20%;color:#19bd9a;position:relative}.gallery .galhover__title:after{content:'';display:block;position:absolute;bottom:-20px;width:0;height:2px;background:#19bd9a;-webkit-transition:.3s ease-in-out;transition:.3s ease-in-out}.gallery .galhover__text{font-family:MyriadPro;font-size:calc(9px + 3*((100vw - 320px)/1040));color:#9cc}.gallery .galhover__icons{position:absolute;bottom:10%}.gallery .galhover__icon{color:#fff;text-align:center;line-height:30px;font-size:15px;width:30px;height:30px}.portfolio-footer{position:relative;max-width:1112px;width:calc(100% - 10px);background:url(../img/portfolio/portfolio-footer.png);background-size:cover;height:calc(120px + 80*((100vw - 320px)/1040));max-height:200px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.portfolio-footer__text{font-family:OpenSans;font-size:calc(17px + 3*((100vw - 320px)/1040));color:#fff;padding-bottom:23px}.portfolio-footer__btn{border-color:#fff;color:#fff;-webkit-transition:.2s;transition:.2s}.already__btn:hover,.portfolio-footer__btn:hover{background-color:#fff;color:#19bd9a}.team{text-align:center;padding:70px 0 100px;max-width:1030px;margin:0 auto}.team__subtitle{width:80%;margin:0 auto}.team__main{padding:60px 50px 0;display:-webkit-box!important;display:-ms-flexbox!important;display:flex!important;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.team__image{width:285px;height:364px;overflow:hidden}@media (max-width:768px){.team__image{width:50vw;padding:50px 20px 0 0}}@media (max-width:480px){.team__image{display:none}}.team__image img{background-size:cover;background-position:center center;width:100%}.team__info{text-align:right;letter-spacing:.05em}.team__member{position:relative;margin-bottom:30px}.team__name{font-family:OpenSans;font-size:20px}.team__position{font-family:SourceSansPro;font-size:14px;text-transform:uppercase;font-style:italic}.team__position:after{background-color:#19bd9a;right:-40px;height:100%;width:4px}@media (max-width:768px){.team__position:after{right:-20px}}.team__description{max-width:380px;font-family:MyriadPro;padding:0 0 40px;color:#999}.team__scills{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:end;-ms-flex-align:end;align-items:end;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.scill{width:330px;padding:0 0 30px}@media (max-width:768px){.scill{width:40vw}}@media (max-width:480px){.scill{width:70vw}}.scill__meta{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;font-family:SourceSansPro;font-size:16px;text-transform:uppercase;font-weight:100;padding:0 0 5px}.scill__bar{height:4px;width:100%;background-color:#e1e4e9}.scill__progress{height:100%;background-color:#19bd9a}.already{text-align:center;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;background:url(../img/already/already-bg.png);width:100%;height:200px;font-family:OpenSans;color:#fff}.already__title{padding-bottom:30px;font-size:calc(15px + 5*((100vw - 320px)/1040))}.already__btn{display:block;font-size:16px;color:#fff;border-color:#fff}.already__btn:hover{color:#000}.testimonials{text-align:center;padding:70px 0 100px;margin:0 auto;background-color:#f3f3f3}@media (max-width:768px){.testimonials{padding:50px 0}}.testimonials__title{padding:0 0 30px}.testimonials__subtitle{padding-bottom:60px;max-width:450px;margin:0 auto}.testimonials .block-wrap{margin:0 30px}.testimonials__block{padding:0 50px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;max-width:1170px;background-color:#fff;margin:0 auto}@media (max-width:768px){.testimonials__block{padding:20px}}@media (max-width:480px){.testimonials__block{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.testimonials__image{width:135px;height:135px;margin:60px;-ms-flex-negative:0;flex-shrink:0}@media (max-width:768px){.testimonials__image{margin:20px}}.testimonials__image img{width:100%;height:100%;border-radius:50%}.testimonials__text{max-width:765px;text-align:left;font-family:OpenSans}.testimonials__quote{color:#999;font-size:calc(12px + 4*((100vw - 320px)/1040));padding-bottom:30px;line-height:1.6}.testimonials__name{text-transform:uppercase;color:#19bd9a;font-weight:700}.testimonials__position{font-size:14px;text-transform:uppercase}.latest{padding:70px 0;background:url(../img/latest/latest_bg.png);background-size:cover;font-family:OpenSans;position:relative}.latest__wrap{max-width:1200px;margin:0 auto}@media (max-width:768px){.latest__wrap{padding:0 30px}}.latest__title{color:#fff}.latest__subtitle{color:#fff;padding-bottom:90px}@media (max-width:768px){.latest__subtitle{padding-bottom:30px}}.news{max-width:1030px;margin:0 auto 100px;padding-top:100px}.news__title{color:#fff;padding:10px 0;max-width:75%}.news__author{text-transform:uppercase;font-size:14px;padding-bottom:15px}.news__author,.news__counts{color:#333;font-family:SourceSansPro}.news__article{color:#999;padding:50px 0;max-width:630px;min-height:250px;font-size:calc(12px + 4*((100vw - 320px)/1040))}@media (max-width:768px){.news__article{max-width:80%}}.news__more{color:#999;cursor:pointer}.news__more-text{display:none}.news__wrap,.news__wrap .slick-dots{display:-webkit-box;display:-ms-flexbox;display:flex}.news__wrap{-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.news__wrap .slick-dots{position:absolute;right:0;top:10%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;height:80px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.news__wrap .slick-dots li{border-color:#fff}.news__wrap .slick-dots li.slick-active,.news__wrap .slick-dots li:hover{background-color:#fff}@media (max-width:480px){.news__wrap .slick-dots{display:none}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
